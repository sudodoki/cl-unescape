;; TODO: ADD PACKAGE
(defvar *escape-table* (make-hash-table :test 'equal))
(defparameter *escaped-scanner* (re:create-scanner "&[#x]?[\\w\\d]+;"))

(defmacro defchar (name char)
  `(setf (gethash ,name *escape-table*) ,char))

;; TODO: Use actual chars
;; cheating here a bit
(defchar "thinsp" #\Space)
(defchar "shy" #\Space)
(defchar "ensp" #\Space)
(defchar "emsp" #\Space)
(defchar "emsp13" #\Space)
(defchar "emsp14" #\Space)
(defchar "numsp" #\Space)
(defchar "puncsp" #\Space)
(defchar "thinsp" #\Space)
(defchar "ThinSpace" #\Space)
(defchar "hairsp" #\Space)
(defchar "VeryThinSpace" #\Space)
(defchar "ZeroWidthSpace" #\Space)
(defchar "NegativeVeryThinSpace" #\Space)
(defchar "NegativeThinSpace" #\Space)
(defchar "NegativeMediumSpace" #\Space)
(defchar "NegativeThickSpace" #\Space)
(defchar "zwnj" #\Space)
(defchar "zwj" #\Space)
(defchar "lrm" #\Space)
(defchar "rlm" #\Space)

;; these are good
(defchar "euro" #\euro_sign)
(defchar "nbsp" #\no-break_space)
(defchar "lt" #\<)
(defchar "gt" #\>)
(defchar "amp" #\&)
(defchar "quot" #\")
(defchar "ndash" #\en_dash)
(defchar "copy" #\copyright_sign)
(defchar "trade" #\trade_mark_sign)
(defchar "excl" #\!)
(defchar "QUOT" #\")
(defchar "num" #\#)
(defchar "dollar" #\$)
(defchar "percnt" #\%)
(defchar "apos" #\')
(defchar "lpar" #\()
(defchar "rpar" #\))
(defchar "ast" #\*)
(defchar "midast" #\*)
(defchar "plus" #\+)
(defchar "comma" #\,)
(defchar "period" #\.)
(defchar "sol" #\/)
(defchar "colon" #\:)
(defchar "semi" #\;)
(defchar "equals" #\=)
(defchar "quest" #\?)
(defchar "commat" #\@)
(defchar "lsqb" #\[)
(defchar "lbrack" #\[)
(defchar "bsol" #\\)
(defchar "rsqb" #\])
(defchar "rbrack" #\])
(defchar "Hat" #\^)
(defchar "lowbar" #\_)
(defchar "grave" #\`)
(defchar "DiacriticalGrave" #\`)
(defchar "lcub" #\{)
(defchar "lbrace" #\{)
(defchar "verbar" #\|)
(defchar "vert" #\|)
(defchar "VerticalLine" #\|)
(defchar "rcub" #\})
(defchar "rbrace" #\})
(defchar "NonBreakingSpace" #\NO-BREAK_SPACE)
(defchar "iexcl" #\INVERTED_EXCLAMATION_MARK)
(defchar "cent" #\CENT_SIGN)
(defchar "pound" #\POUND_SIGN)
(defchar "curren" #\CURRENCY_SIGN)
(defchar "yen" #\YEN_SIGN)
(defchar "brvbar" #\BROKEN_BAR)
(defchar "sect" #\SECTION_SIGN)
(defchar "Dot" #\DIAERESIS)
(defchar "die" #\DIAERESIS)
(defchar "DoubleDot" #\DIAERESIS)
(defchar "uml" #\DIAERESIS)
(defchar "COPY" #\COPYRIGHT_SIGN)
(defchar "ordf" #\FEMININE_ORDINAL_INDICATOR)
(defchar "laquo" #\LEFT-POINTING_DOUBLE_ANGLE_QUOTATION_MARK)
(defchar "not" #\NOT_SIGN)
(defchar "reg" #\REGISTERED_SIGN)
(defchar "circledR" #\REGISTERED_SIGN)
(defchar "REG" #\REGISTERED_SIGN)
(defchar "macr" #\MACRON)
(defchar "OverBar" #\MACRON)
(defchar "strns" #\MACRON)
(defchar "deg" #\DEGREE_SIGN)
(defchar "plusmn" #\PLUS-MINUS_SIGN)
(defchar "pm" #\PLUS-MINUS_SIGN)
(defchar "PlusMinus" #\PLUS-MINUS_SIGN)
(defchar "sup2" #\SUPERSCRIPT_TWO)
(defchar "sup3" #\SUPERSCRIPT_THREE)
(defchar "acute" #\ACUTE_ACCENT)
(defchar "DiacriticalAcute" #\ACUTE_ACCENT)
(defchar "micro" #\MICRO_SIGN)
(defchar "para" #\PILCROW_SIGN)
(defchar "middot" #\MIDDLE_DOT)
(defchar "centerdot" #\MIDDLE_DOT)
(defchar "CenterDot" #\MIDDLE_DOT)
(defchar "cedil" #\CEDILLA)
(defchar "Cedilla" #\CEDILLA)
(defchar "sup1" #\SUPERSCRIPT_ONE)
(defchar "ordm" #\MASCULINE_ORDINAL_INDICATOR)
(defchar "raquo" #\RIGHT-POINTING_DOUBLE_ANGLE_QUOTATION_MARK)
(defchar "frac14" #\VULGAR_FRACTION_ONE_QUARTER)
(defchar "frac12" #\VULGAR_FRACTION_ONE_HALF)
(defchar "half" #\VULGAR_FRACTION_ONE_HALF)
(defchar "frac34" #\VULGAR_FRACTION_THREE_QUARTERS)
(defchar "iquest" #\INVERTED_QUESTION_MARK)
(defchar "Agrave" #\LATIN_CAPITAL_LETTER_A_WITH_GRAVE)
(defchar "Aacute" #\LATIN_CAPITAL_LETTER_A_WITH_ACUTE)
(defchar "Acirc" #\LATIN_CAPITAL_LETTER_A_WITH_CIRCUMFLEX)
(defchar "Atilde" #\LATIN_CAPITAL_LETTER_A_WITH_TILDE)
(defchar "Auml" #\LATIN_CAPITAL_LETTER_A_WITH_DIAERESIS)
(defchar "Aring" #\LATIN_CAPITAL_LETTER_A_WITH_RING_ABOVE)
(defchar "AElig" #\LATIN_CAPITAL_LETTER_AE)
(defchar "Ccedil" #\LATIN_CAPITAL_LETTER_C_WITH_CEDILLA)
(defchar "Egrave" #\LATIN_CAPITAL_LETTER_E_WITH_GRAVE)
(defchar "Eacute" #\LATIN_CAPITAL_LETTER_E_WITH_ACUTE)
(defchar "Ecirc" #\LATIN_CAPITAL_LETTER_E_WITH_CIRCUMFLEX)
(defchar "Euml" #\LATIN_CAPITAL_LETTER_E_WITH_DIAERESIS)
(defchar "Igrave" #\LATIN_CAPITAL_LETTER_I_WITH_GRAVE)
(defchar "Iacute" #\LATIN_CAPITAL_LETTER_I_WITH_ACUTE)
(defchar "Icirc" #\LATIN_CAPITAL_LETTER_I_WITH_CIRCUMFLEX)
(defchar "Iuml" #\LATIN_CAPITAL_LETTER_I_WITH_DIAERESIS)
(defchar "ETH" #\LATIN_CAPITAL_LETTER_ETH)
(defchar "Ntilde" #\LATIN_CAPITAL_LETTER_N_WITH_TILDE)
(defchar "Ograve" #\LATIN_CAPITAL_LETTER_O_WITH_GRAVE)
(defchar "Oacute" #\LATIN_CAPITAL_LETTER_O_WITH_ACUTE)
(defchar "Ocirc" #\LATIN_CAPITAL_LETTER_O_WITH_CIRCUMFLEX)
(defchar "Otilde" #\LATIN_CAPITAL_LETTER_O_WITH_TILDE)
(defchar "Ouml" #\LATIN_CAPITAL_LETTER_O_WITH_DIAERESIS)
(defchar "times" #\MULTIPLICATION_SIGN)
(defchar "Oslash" #\LATIN_CAPITAL_LETTER_O_WITH_STROKE)
(defchar "Ugrave" #\LATIN_CAPITAL_LETTER_U_WITH_GRAVE)
(defchar "Uacute" #\LATIN_CAPITAL_LETTER_U_WITH_ACUTE)
(defchar "Ucirc" #\LATIN_CAPITAL_LETTER_U_WITH_CIRCUMFLEX)
(defchar "Uuml" #\LATIN_CAPITAL_LETTER_U_WITH_DIAERESIS)
(defchar "Yacute" #\LATIN_CAPITAL_LETTER_Y_WITH_ACUTE)
(defchar "THORN" #\LATIN_CAPITAL_LETTER_THORN)
(defchar "szlig" #\LATIN_SMALL_LETTER_SHARP_S)
(defchar "agrave" #\LATIN_SMALL_LETTER_A_WITH_GRAVE)
(defchar "aacute" #\LATIN_SMALL_LETTER_A_WITH_ACUTE)
(defchar "acirc" #\LATIN_SMALL_LETTER_A_WITH_CIRCUMFLEX)
(defchar "atilde" #\LATIN_SMALL_LETTER_A_WITH_TILDE)
(defchar "auml" #\LATIN_SMALL_LETTER_A_WITH_DIAERESIS)
(defchar "aring" #\LATIN_SMALL_LETTER_A_WITH_RING_ABOVE)
(defchar "aelig" #\LATIN_SMALL_LETTER_AE)
(defchar "ccedil" #\LATIN_SMALL_LETTER_C_WITH_CEDILLA)
(defchar "egrave" #\LATIN_SMALL_LETTER_E_WITH_GRAVE)
(defchar "eacute" #\LATIN_SMALL_LETTER_E_WITH_ACUTE)
(defchar "ecirc" #\LATIN_SMALL_LETTER_E_WITH_CIRCUMFLEX)
(defchar "euml" #\LATIN_SMALL_LETTER_E_WITH_DIAERESIS)
(defchar "igrave" #\LATIN_SMALL_LETTER_I_WITH_GRAVE)
(defchar "iacute" #\LATIN_SMALL_LETTER_I_WITH_ACUTE)
(defchar "icirc" #\LATIN_SMALL_LETTER_I_WITH_CIRCUMFLEX)
(defchar "iuml" #\LATIN_SMALL_LETTER_I_WITH_DIAERESIS)
(defchar "eth" #\LATIN_SMALL_LETTER_ETH)
(defchar "ntilde" #\LATIN_SMALL_LETTER_N_WITH_TILDE)
(defchar "ograve" #\LATIN_SMALL_LETTER_O_WITH_GRAVE)
(defchar "oacute" #\LATIN_SMALL_LETTER_O_WITH_ACUTE)
(defchar "ocirc" #\LATIN_SMALL_LETTER_O_WITH_CIRCUMFLEX)
(defchar "otilde" #\LATIN_SMALL_LETTER_O_WITH_TILDE)
(defchar "ouml" #\LATIN_SMALL_LETTER_O_WITH_DIAERESIS)
(defchar "divide" #\DIVISION_SIGN)
(defchar "div" #\DIVISION_SIGN)
(defchar "oslash" #\LATIN_SMALL_LETTER_O_WITH_STROKE)
(defchar "ugrave" #\LATIN_SMALL_LETTER_U_WITH_GRAVE)
(defchar "uacute" #\LATIN_SMALL_LETTER_U_WITH_ACUTE)
(defchar "ucirc" #\LATIN_SMALL_LETTER_U_WITH_CIRCUMFLEX)
(defchar "uuml" #\LATIN_SMALL_LETTER_U_WITH_DIAERESIS)
(defchar "yacute" #\LATIN_SMALL_LETTER_Y_WITH_ACUTE)
(defchar "thorn" #\LATIN_SMALL_LETTER_THORN)
(defchar "yuml" #\LATIN_SMALL_LETTER_Y_WITH_DIAERESIS)
(defchar "Amacr" #\LATIN_CAPITAL_LETTER_A_WITH_MACRON)
(defchar "amacr" #\LATIN_SMALL_LETTER_A_WITH_MACRON)
(defchar "Abreve" #\LATIN_CAPITAL_LETTER_A_WITH_BREVE)
(defchar "abreve" #\LATIN_SMALL_LETTER_A_WITH_BREVE)
(defchar "Aogon" #\LATIN_CAPITAL_LETTER_A_WITH_OGONEK)
(defchar "aogon" #\LATIN_SMALL_LETTER_A_WITH_OGONEK)
(defchar "Cacute" #\LATIN_CAPITAL_LETTER_C_WITH_ACUTE)
(defchar "cacute" #\LATIN_SMALL_LETTER_C_WITH_ACUTE)
(defchar "Ccirc" #\LATIN_CAPITAL_LETTER_C_WITH_CIRCUMFLEX)
(defchar "ccirc" #\LATIN_SMALL_LETTER_C_WITH_CIRCUMFLEX)
(defchar "Cdot" #\LATIN_CAPITAL_LETTER_C_WITH_DOT_ABOVE)
(defchar "cdot" #\LATIN_SMALL_LETTER_C_WITH_DOT_ABOVE)
(defchar "Ccaron" #\LATIN_CAPITAL_LETTER_C_WITH_CARON)
(defchar "ccaron" #\LATIN_SMALL_LETTER_C_WITH_CARON)
(defchar "Dcaron" #\LATIN_CAPITAL_LETTER_D_WITH_CARON)
(defchar "dcaron" #\LATIN_SMALL_LETTER_D_WITH_CARON)
(defchar "Dstrok" #\LATIN_CAPITAL_LETTER_D_WITH_STROKE)
(defchar "dstrok" #\LATIN_SMALL_LETTER_D_WITH_STROKE)
(defchar "Emacr" #\LATIN_CAPITAL_LETTER_E_WITH_MACRON)
(defchar "emacr" #\LATIN_SMALL_LETTER_E_WITH_MACRON)
(defchar "Edot" #\LATIN_CAPITAL_LETTER_E_WITH_DOT_ABOVE)
(defchar "edot" #\LATIN_SMALL_LETTER_E_WITH_DOT_ABOVE)
(defchar "Eogon" #\LATIN_CAPITAL_LETTER_E_WITH_OGONEK)
(defchar "eogon" #\LATIN_SMALL_LETTER_E_WITH_OGONEK)
(defchar "Ecaron" #\LATIN_CAPITAL_LETTER_E_WITH_CARON)
(defchar "ecaron" #\LATIN_SMALL_LETTER_E_WITH_CARON)
(defchar "Gcirc" #\LATIN_CAPITAL_LETTER_G_WITH_CIRCUMFLEX)
(defchar "gcirc" #\LATIN_SMALL_LETTER_G_WITH_CIRCUMFLEX)
(defchar "Gbreve" #\LATIN_CAPITAL_LETTER_G_WITH_BREVE)
(defchar "gbreve" #\LATIN_SMALL_LETTER_G_WITH_BREVE)
(defchar "Gdot" #\LATIN_CAPITAL_LETTER_G_WITH_DOT_ABOVE)
(defchar "gdot" #\LATIN_SMALL_LETTER_G_WITH_DOT_ABOVE)
(defchar "Gcedil" #\LATIN_CAPITAL_LETTER_G_WITH_CEDILLA)
(defchar "Hcirc" #\LATIN_CAPITAL_LETTER_H_WITH_CIRCUMFLEX)
(defchar "hcirc" #\LATIN_SMALL_LETTER_H_WITH_CIRCUMFLEX)
(defchar "Hstrok" #\LATIN_CAPITAL_LETTER_H_WITH_STROKE)
(defchar "hstrok" #\LATIN_SMALL_LETTER_H_WITH_STROKE)
(defchar "Itilde" #\LATIN_CAPITAL_LETTER_I_WITH_TILDE)
(defchar "itilde" #\LATIN_SMALL_LETTER_I_WITH_TILDE)
(defchar "Imacr" #\LATIN_CAPITAL_LETTER_I_WITH_MACRON)
(defchar "imacr" #\LATIN_SMALL_LETTER_I_WITH_MACRON)
(defchar "Iogon" #\LATIN_CAPITAL_LETTER_I_WITH_OGONEK)
(defchar "iogon" #\LATIN_SMALL_LETTER_I_WITH_OGONEK)
(defchar "Idot" #\LATIN_CAPITAL_LETTER_I_WITH_DOT_ABOVE)
(defchar "imath" #\LATIN_SMALL_LETTER_DOTLESS_I)
(defchar "inodot" #\LATIN_SMALL_LETTER_DOTLESS_I)
(defchar "IJlig" #\LATIN_CAPITAL_LIGATURE_IJ)
(defchar "ijlig" #\LATIN_SMALL_LIGATURE_IJ)
(defchar "Jcirc" #\LATIN_CAPITAL_LETTER_J_WITH_CIRCUMFLEX)
(defchar "jcirc" #\LATIN_SMALL_LETTER_J_WITH_CIRCUMFLEX)
(defchar "Kcedil" #\LATIN_CAPITAL_LETTER_K_WITH_CEDILLA)
(defchar "kcedil" #\LATIN_SMALL_LETTER_K_WITH_CEDILLA)
(defchar "kgreen" #\LATIN_SMALL_LETTER_KRA)
(defchar "Lacute" #\LATIN_CAPITAL_LETTER_L_WITH_ACUTE)
(defchar "lacute" #\LATIN_SMALL_LETTER_L_WITH_ACUTE)
(defchar "Lcedil" #\LATIN_CAPITAL_LETTER_L_WITH_CEDILLA)
(defchar "lcedil" #\LATIN_SMALL_LETTER_L_WITH_CEDILLA)
(defchar "Lcaron" #\LATIN_CAPITAL_LETTER_L_WITH_CARON)
(defchar "lcaron" #\LATIN_SMALL_LETTER_L_WITH_CARON)
(defchar "Lmidot" #\LATIN_CAPITAL_LETTER_L_WITH_MIDDLE_DOT)
(defchar "lmidot" #\LATIN_SMALL_LETTER_L_WITH_MIDDLE_DOT)
(defchar "Lstrok" #\LATIN_CAPITAL_LETTER_L_WITH_STROKE)
(defchar "lstrok" #\LATIN_SMALL_LETTER_L_WITH_STROKE)
(defchar "Nacute" #\LATIN_CAPITAL_LETTER_N_WITH_ACUTE)
(defchar "nacute" #\LATIN_SMALL_LETTER_N_WITH_ACUTE)
(defchar "Ncedil" #\LATIN_CAPITAL_LETTER_N_WITH_CEDILLA)
(defchar "ncedil" #\LATIN_SMALL_LETTER_N_WITH_CEDILLA)
(defchar "Ncaron" #\LATIN_CAPITAL_LETTER_N_WITH_CARON)
(defchar "ncaron" #\LATIN_SMALL_LETTER_N_WITH_CARON)
(defchar "napos" #\LATIN_SMALL_LETTER_N_PRECEDED_BY_APOSTROPHE)
(defchar "ENG" #\LATIN_CAPITAL_LETTER_ENG)
(defchar "eng" #\LATIN_SMALL_LETTER_ENG)
(defchar "Omacr" #\LATIN_CAPITAL_LETTER_O_WITH_MACRON)
(defchar "omacr" #\LATIN_SMALL_LETTER_O_WITH_MACRON)
(defchar "Odblac" #\LATIN_CAPITAL_LETTER_O_WITH_DOUBLE_ACUTE)
(defchar "odblac" #\LATIN_SMALL_LETTER_O_WITH_DOUBLE_ACUTE)
(defchar "OElig" #\LATIN_CAPITAL_LIGATURE_OE)
(defchar "oelig" #\LATIN_SMALL_LIGATURE_OE)
(defchar "Racute" #\LATIN_CAPITAL_LETTER_R_WITH_ACUTE)
(defchar "racute" #\LATIN_SMALL_LETTER_R_WITH_ACUTE)
(defchar "Rcedil" #\LATIN_CAPITAL_LETTER_R_WITH_CEDILLA)
(defchar "rcedil" #\LATIN_SMALL_LETTER_R_WITH_CEDILLA)
(defchar "Rcaron" #\LATIN_CAPITAL_LETTER_R_WITH_CARON)
(defchar "rcaron" #\LATIN_SMALL_LETTER_R_WITH_CARON)
(defchar "Sacute" #\LATIN_CAPITAL_LETTER_S_WITH_ACUTE)
(defchar "sacute" #\LATIN_SMALL_LETTER_S_WITH_ACUTE)
(defchar "Scirc" #\LATIN_CAPITAL_LETTER_S_WITH_CIRCUMFLEX)
(defchar "scirc" #\LATIN_SMALL_LETTER_S_WITH_CIRCUMFLEX)
(defchar "Scedil" #\LATIN_CAPITAL_LETTER_S_WITH_CEDILLA)
(defchar "scedil" #\LATIN_SMALL_LETTER_S_WITH_CEDILLA)
(defchar "Scaron" #\LATIN_CAPITAL_LETTER_S_WITH_CARON)
(defchar "scaron" #\LATIN_SMALL_LETTER_S_WITH_CARON)
(defchar "Tcedil" #\LATIN_CAPITAL_LETTER_T_WITH_CEDILLA)
(defchar "tcedil" #\LATIN_SMALL_LETTER_T_WITH_CEDILLA)
(defchar "Tcaron" #\LATIN_CAPITAL_LETTER_T_WITH_CARON)
(defchar "tcaron" #\LATIN_SMALL_LETTER_T_WITH_CARON)
(defchar "Tstrok" #\LATIN_CAPITAL_LETTER_T_WITH_STROKE)
(defchar "tstrok" #\LATIN_SMALL_LETTER_T_WITH_STROKE)
(defchar "Utilde" #\LATIN_CAPITAL_LETTER_U_WITH_TILDE)
(defchar "utilde" #\LATIN_SMALL_LETTER_U_WITH_TILDE)
(defchar "Umacr" #\LATIN_CAPITAL_LETTER_U_WITH_MACRON)
(defchar "umacr" #\LATIN_SMALL_LETTER_U_WITH_MACRON)
(defchar "Ubreve" #\LATIN_CAPITAL_LETTER_U_WITH_BREVE)
(defchar "ubreve" #\LATIN_SMALL_LETTER_U_WITH_BREVE)
(defchar "Uring" #\LATIN_CAPITAL_LETTER_U_WITH_RING_ABOVE)
(defchar "uring" #\LATIN_SMALL_LETTER_U_WITH_RING_ABOVE)
(defchar "Udblac" #\LATIN_CAPITAL_LETTER_U_WITH_DOUBLE_ACUTE)
(defchar "udblac" #\LATIN_SMALL_LETTER_U_WITH_DOUBLE_ACUTE)
(defchar "Uogon" #\LATIN_CAPITAL_LETTER_U_WITH_OGONEK)
(defchar "uogon" #\LATIN_SMALL_LETTER_U_WITH_OGONEK)
(defchar "Wcirc" #\LATIN_CAPITAL_LETTER_W_WITH_CIRCUMFLEX)
(defchar "wcirc" #\LATIN_SMALL_LETTER_W_WITH_CIRCUMFLEX)
(defchar "Ycirc" #\LATIN_CAPITAL_LETTER_Y_WITH_CIRCUMFLEX)
(defchar "ycirc" #\LATIN_SMALL_LETTER_Y_WITH_CIRCUMFLEX)
(defchar "Yuml" #\LATIN_CAPITAL_LETTER_Y_WITH_DIAERESIS)
(defchar "Zacute" #\LATIN_CAPITAL_LETTER_Z_WITH_ACUTE)
(defchar "zacute" #\LATIN_SMALL_LETTER_Z_WITH_ACUTE)
(defchar "Zdot" #\LATIN_CAPITAL_LETTER_Z_WITH_DOT_ABOVE)
(defchar "zdot" #\LATIN_SMALL_LETTER_Z_WITH_DOT_ABOVE)
(defchar "Zcaron" #\LATIN_CAPITAL_LETTER_Z_WITH_CARON)
(defchar "zcaron" #\LATIN_SMALL_LETTER_Z_WITH_CARON)
(defchar "fnof" #\LATIN_SMALL_LETTER_F_WITH_HOOK)
(defchar "imped" #\LATIN_CAPITAL_LETTER_Z_WITH_STROKE)
(defchar "gacute" #\LATIN_SMALL_LETTER_G_WITH_ACUTE)
(defchar "jmath" #\LATIN_SMALL_LETTER_DOTLESS_J)
(defchar "circ" #\MODIFIER_LETTER_CIRCUMFLEX_ACCENT)
(defchar "caron" #\CARON)
(defchar "Hacek" #\CARON)
(defchar "breve" #\BREVE)
(defchar "Breve" #\BREVE)
(defchar "dot" #\DOT_ABOVE)
(defchar "DiacriticalDot" #\DOT_ABOVE)
(defchar "ring" #\RING_ABOVE)
(defchar "ogon" #\OGONEK)
(defchar "tilde" #\SMALL_TILDE)
(defchar "DiacriticalTilde" #\SMALL_TILDE)
(defchar "dblac" #\DOUBLE_ACUTE_ACCENT)
(defchar "DiacriticalDoubleAcute" #\DOUBLE_ACUTE_ACCENT)
(defchar "DownBreve" #\COMBINING_INVERTED_BREVE)
(defchar "UnderBar" #\COMBINING_LOW_LINE)
(defchar "Alpha" #\GREEK_CAPITAL_LETTER_ALPHA)
(defchar "Beta" #\GREEK_CAPITAL_LETTER_BETA)
(defchar "Gamma" #\GREEK_CAPITAL_LETTER_GAMMA)
(defchar "Delta" #\GREEK_CAPITAL_LETTER_DELTA)
(defchar "Epsilon" #\GREEK_CAPITAL_LETTER_EPSILON)
(defchar "Zeta" #\GREEK_CAPITAL_LETTER_ZETA)
(defchar "Eta" #\GREEK_CAPITAL_LETTER_ETA)
(defchar "Theta" #\GREEK_CAPITAL_LETTER_THETA)
(defchar "Iota" #\GREEK_CAPITAL_LETTER_IOTA)
(defchar "Kappa" #\GREEK_CAPITAL_LETTER_KAPPA)
(defchar "Lambda" #\GREEK_CAPITAL_LETTER_LAMDA)
(defchar "Mu" #\GREEK_CAPITAL_LETTER_MU)
(defchar "Nu" #\GREEK_CAPITAL_LETTER_NU)
(defchar "Xi" #\GREEK_CAPITAL_LETTER_XI)
(defchar "Omicron" #\GREEK_CAPITAL_LETTER_OMICRON)
(defchar "Pi" #\GREEK_CAPITAL_LETTER_PI)
(defchar "Rho" #\GREEK_CAPITAL_LETTER_RHO)
(defchar "Sigma" #\GREEK_CAPITAL_LETTER_SIGMA)
(defchar "Tau" #\GREEK_CAPITAL_LETTER_TAU)
(defchar "Upsilon" #\GREEK_CAPITAL_LETTER_UPSILON)
(defchar "Phi" #\GREEK_CAPITAL_LETTER_PHI)
(defchar "Chi" #\GREEK_CAPITAL_LETTER_CHI)
(defchar "Psi" #\GREEK_CAPITAL_LETTER_PSI)
(defchar "Omega" #\GREEK_CAPITAL_LETTER_OMEGA)
(defchar "alpha" #\GREEK_SMALL_LETTER_ALPHA)
(defchar "beta" #\GREEK_SMALL_LETTER_BETA)
(defchar "gamma" #\GREEK_SMALL_LETTER_GAMMA)
(defchar "delta" #\GREEK_SMALL_LETTER_DELTA)
(defchar "epsiv" #\GREEK_SMALL_LETTER_EPSILON)
(defchar "varepsilon" #\GREEK_SMALL_LETTER_EPSILON)
(defchar "epsilon" #\GREEK_SMALL_LETTER_EPSILON)
(defchar "zeta" #\GREEK_SMALL_LETTER_ZETA)
(defchar "eta" #\GREEK_SMALL_LETTER_ETA)
(defchar "theta" #\GREEK_SMALL_LETTER_THETA)
(defchar "iota" #\GREEK_SMALL_LETTER_IOTA)
(defchar "kappa" #\GREEK_SMALL_LETTER_KAPPA)
(defchar "lambda" #\GREEK_SMALL_LETTER_LAMDA)
(defchar "mu" #\GREEK_SMALL_LETTER_MU)
(defchar "nu" #\GREEK_SMALL_LETTER_NU)
(defchar "xi" #\GREEK_SMALL_LETTER_XI)
(defchar "omicron" #\GREEK_SMALL_LETTER_OMICRON)
(defchar "pi" #\GREEK_SMALL_LETTER_PI)
(defchar "rho" #\GREEK_SMALL_LETTER_RHO)
(defchar "sigmav" #\GREEK_SMALL_LETTER_FINAL_SIGMA)
(defchar "varsigma" #\GREEK_SMALL_LETTER_FINAL_SIGMA)
(defchar "sigmaf" #\GREEK_SMALL_LETTER_FINAL_SIGMA)
(defchar "sigma" #\GREEK_SMALL_LETTER_SIGMA)
(defchar "tau" #\GREEK_SMALL_LETTER_TAU)
(defchar "upsi" #\GREEK_SMALL_LETTER_UPSILON)
(defchar "upsilon" #\GREEK_SMALL_LETTER_UPSILON)
(defchar "phi" #\GREEK_SMALL_LETTER_PHI)
(defchar "phiv" #\GREEK_SMALL_LETTER_PHI)
(defchar "varphi" #\GREEK_SMALL_LETTER_PHI)
(defchar "chi" #\GREEK_SMALL_LETTER_CHI)
(defchar "psi" #\GREEK_SMALL_LETTER_PSI)
(defchar "omega" #\GREEK_SMALL_LETTER_OMEGA)
(defchar "thetav" #\GREEK_THETA_SYMBOL)
(defchar "vartheta" #\GREEK_THETA_SYMBOL)
(defchar "thetasym" #\GREEK_THETA_SYMBOL)
(defchar "Upsi" #\GREEK_UPSILON_WITH_HOOK_SYMBOL)
(defchar "upsih" #\GREEK_UPSILON_WITH_HOOK_SYMBOL)
(defchar "straightphi" #\GREEK_PHI_SYMBOL)
(defchar "piv" #\GREEK_PI_SYMBOL)
(defchar "varpi" #\GREEK_PI_SYMBOL)
(defchar "Gammad" #\GREEK_LETTER_DIGAMMA)
(defchar "gammad" #\GREEK_SMALL_LETTER_DIGAMMA)
(defchar "digamma" #\GREEK_SMALL_LETTER_DIGAMMA)
(defchar "kappav" #\GREEK_KAPPA_SYMBOL)
(defchar "varkappa" #\GREEK_KAPPA_SYMBOL)
(defchar "rhov" #\GREEK_RHO_SYMBOL)
(defchar "varrho" #\GREEK_RHO_SYMBOL)
(defchar "epsi" #\GREEK_LUNATE_EPSILON_SYMBOL)
(defchar "straightepsilon" #\GREEK_LUNATE_EPSILON_SYMBOL)
(defchar "bepsi" #\GREEK_REVERSED_LUNATE_EPSILON_SYMBOL)
(defchar "backepsilon" #\GREEK_REVERSED_LUNATE_EPSILON_SYMBOL)
(defchar "IOcy" #\CYRILLIC_CAPITAL_LETTER_IO)
(defchar "DJcy" #\CYRILLIC_CAPITAL_LETTER_DJE)
(defchar "GJcy" #\CYRILLIC_CAPITAL_LETTER_GJE)
(defchar "Jukcy" #\CYRILLIC_CAPITAL_LETTER_UKRAINIAN_IE)
(defchar "DScy" #\CYRILLIC_CAPITAL_LETTER_DZE)
(defchar "Iukcy" #\CYRILLIC_CAPITAL_LETTER_BYELORUSSIAN-UKRAINIAN_I)
(defchar "YIcy" #\CYRILLIC_CAPITAL_LETTER_YI)
(defchar "Jsercy" #\CYRILLIC_CAPITAL_LETTER_JE)
(defchar "LJcy" #\CYRILLIC_CAPITAL_LETTER_LJE)
(defchar "NJcy" #\CYRILLIC_CAPITAL_LETTER_NJE)
(defchar "TSHcy" #\CYRILLIC_CAPITAL_LETTER_TSHE)
(defchar "KJcy" #\CYRILLIC_CAPITAL_LETTER_KJE)
(defchar "Ubrcy" #\CYRILLIC_CAPITAL_LETTER_SHORT_U)
(defchar "DZcy" #\CYRILLIC_CAPITAL_LETTER_DZHE)
(defchar "Acy" #\CYRILLIC_CAPITAL_LETTER_A)
(defchar "Bcy" #\CYRILLIC_CAPITAL_LETTER_BE)
(defchar "Vcy" #\CYRILLIC_CAPITAL_LETTER_VE)
(defchar "Gcy" #\CYRILLIC_CAPITAL_LETTER_GHE)
(defchar "Dcy" #\CYRILLIC_CAPITAL_LETTER_DE)
(defchar "IEcy" #\CYRILLIC_CAPITAL_LETTER_IE)
(defchar "ZHcy" #\CYRILLIC_CAPITAL_LETTER_ZHE)
(defchar "Zcy" #\CYRILLIC_CAPITAL_LETTER_ZE)
(defchar "Icy" #\CYRILLIC_CAPITAL_LETTER_I)
(defchar "Jcy" #\CYRILLIC_CAPITAL_LETTER_SHORT_I)
(defchar "Kcy" #\CYRILLIC_CAPITAL_LETTER_KA)
(defchar "Lcy" #\CYRILLIC_CAPITAL_LETTER_EL)
(defchar "Mcy" #\CYRILLIC_CAPITAL_LETTER_EM)
(defchar "Ncy" #\CYRILLIC_CAPITAL_LETTER_EN)
(defchar "Ocy" #\CYRILLIC_CAPITAL_LETTER_O)
(defchar "Pcy" #\CYRILLIC_CAPITAL_LETTER_PE)
(defchar "Rcy" #\CYRILLIC_CAPITAL_LETTER_ER)
(defchar "Scy" #\CYRILLIC_CAPITAL_LETTER_ES)
(defchar "Tcy" #\CYRILLIC_CAPITAL_LETTER_TE)
(defchar "Ucy" #\CYRILLIC_CAPITAL_LETTER_U)
(defchar "Fcy" #\CYRILLIC_CAPITAL_LETTER_EF)
(defchar "KHcy" #\CYRILLIC_CAPITAL_LETTER_HA)
(defchar "TScy" #\CYRILLIC_CAPITAL_LETTER_TSE)
(defchar "CHcy" #\CYRILLIC_CAPITAL_LETTER_CHE)
(defchar "SHcy" #\CYRILLIC_CAPITAL_LETTER_SHA)
(defchar "SHCHcy" #\CYRILLIC_CAPITAL_LETTER_SHCHA)
(defchar "HARDcy" #\CYRILLIC_CAPITAL_LETTER_HARD_SIGN)
(defchar "Ycy" #\CYRILLIC_CAPITAL_LETTER_YERU)
(defchar "SOFTcy" #\CYRILLIC_CAPITAL_LETTER_SOFT_SIGN)
(defchar "Ecy" #\CYRILLIC_CAPITAL_LETTER_E)
(defchar "YUcy" #\CYRILLIC_CAPITAL_LETTER_YU)
(defchar "YAcy" #\CYRILLIC_CAPITAL_LETTER_YA)
(defchar "acy" #\CYRILLIC_SMALL_LETTER_A)
(defchar "bcy" #\CYRILLIC_SMALL_LETTER_BE)
(defchar "vcy" #\CYRILLIC_SMALL_LETTER_VE)
(defchar "gcy" #\CYRILLIC_SMALL_LETTER_GHE)
(defchar "dcy" #\CYRILLIC_SMALL_LETTER_DE)
(defchar "iecy" #\CYRILLIC_SMALL_LETTER_IE)
(defchar "zhcy" #\CYRILLIC_SMALL_LETTER_ZHE)
(defchar "zcy" #\CYRILLIC_SMALL_LETTER_ZE)
(defchar "icy" #\CYRILLIC_SMALL_LETTER_I)
(defchar "jcy" #\CYRILLIC_SMALL_LETTER_SHORT_I)
(defchar "kcy" #\CYRILLIC_SMALL_LETTER_KA)
(defchar "lcy" #\CYRILLIC_SMALL_LETTER_EL)
(defchar "mcy" #\CYRILLIC_SMALL_LETTER_EM)
(defchar "ncy" #\CYRILLIC_SMALL_LETTER_EN)
(defchar "ocy" #\CYRILLIC_SMALL_LETTER_O)
(defchar "pcy" #\CYRILLIC_SMALL_LETTER_PE)
(defchar "rcy" #\CYRILLIC_SMALL_LETTER_ER)
(defchar "scy" #\CYRILLIC_SMALL_LETTER_ES)
(defchar "tcy" #\CYRILLIC_SMALL_LETTER_TE)
(defchar "ucy" #\CYRILLIC_SMALL_LETTER_U)
(defchar "fcy" #\CYRILLIC_SMALL_LETTER_EF)
(defchar "khcy" #\CYRILLIC_SMALL_LETTER_HA)
(defchar "tscy" #\CYRILLIC_SMALL_LETTER_TSE)
(defchar "chcy" #\CYRILLIC_SMALL_LETTER_CHE)
(defchar "shcy" #\CYRILLIC_SMALL_LETTER_SHA)
(defchar "shchcy" #\CYRILLIC_SMALL_LETTER_SHCHA)
(defchar "hardcy" #\CYRILLIC_SMALL_LETTER_HARD_SIGN)
(defchar "ycy" #\CYRILLIC_SMALL_LETTER_YERU)
(defchar "softcy" #\CYRILLIC_SMALL_LETTER_SOFT_SIGN)
(defchar "ecy" #\CYRILLIC_SMALL_LETTER_E)
(defchar "yucy" #\CYRILLIC_SMALL_LETTER_YU)
(defchar "yacy" #\CYRILLIC_SMALL_LETTER_YA)
(defchar "iocy" #\CYRILLIC_SMALL_LETTER_IO)
(defchar "djcy" #\CYRILLIC_SMALL_LETTER_DJE)
(defchar "gjcy" #\CYRILLIC_SMALL_LETTER_GJE)
(defchar "jukcy" #\CYRILLIC_SMALL_LETTER_UKRAINIAN_IE)
(defchar "dscy" #\CYRILLIC_SMALL_LETTER_DZE)
(defchar "iukcy" #\CYRILLIC_SMALL_LETTER_BYELORUSSIAN-UKRAINIAN_I)
(defchar "yicy" #\CYRILLIC_SMALL_LETTER_YI)
(defchar "jsercy" #\CYRILLIC_SMALL_LETTER_JE)
(defchar "ljcy" #\CYRILLIC_SMALL_LETTER_LJE)
(defchar "njcy" #\CYRILLIC_SMALL_LETTER_NJE)
(defchar "tshcy" #\CYRILLIC_SMALL_LETTER_TSHE)
(defchar "kjcy" #\CYRILLIC_SMALL_LETTER_KJE)
(defchar "ubrcy" #\CYRILLIC_SMALL_LETTER_SHORT_U)
(defchar "dzcy" #\CYRILLIC_SMALL_LETTER_DZHE)
(defchar "hyphen" #\HYPHEN)
(defchar "dash" #\HYPHEN)
(defchar "mdash" #\EM_DASH)
(defchar "horbar" #\HORIZONTAL_BAR)
(defchar "Verbar" #\DOUBLE_VERTICAL_LINE)
(defchar "Vert" #\DOUBLE_VERTICAL_LINE)
(defchar "lsquo" #\LEFT_SINGLE_QUOTATION_MARK)
(defchar "OpenCurlyQuote" #\LEFT_SINGLE_QUOTATION_MARK)
(defchar "rsquo" #\RIGHT_SINGLE_QUOTATION_MARK)
(defchar "rsquor" #\RIGHT_SINGLE_QUOTATION_MARK)
(defchar "CloseCurlyQuote" #\RIGHT_SINGLE_QUOTATION_MARK)
(defchar "lsquor" #\SINGLE_LOW-9_QUOTATION_MARK)
(defchar "sbquo" #\SINGLE_LOW-9_QUOTATION_MARK)
(defchar "ldquo" #\LEFT_DOUBLE_QUOTATION_MARK)
(defchar "OpenCurlyDoubleQuote" #\LEFT_DOUBLE_QUOTATION_MARK)
(defchar "rdquo" #\RIGHT_DOUBLE_QUOTATION_MARK)
(defchar "rdquor" #\RIGHT_DOUBLE_QUOTATION_MARK)
(defchar "CloseCurlyDoubleQuote" #\RIGHT_DOUBLE_QUOTATION_MARK)
(defchar "ldquor" #\DOUBLE_LOW-9_QUOTATION_MARK)
(defchar "bdquo" #\DOUBLE_LOW-9_QUOTATION_MARK)
(defchar "dagger" #\DAGGER)
(defchar "Dagger" #\DOUBLE_DAGGER)
(defchar "ddagger" #\DOUBLE_DAGGER)
(defchar "bull" #\BULLET)
(defchar "bullet" #\BULLET)
(defchar "nldr" #\TWO_DOT_LEADER)
(defchar "hellip" #\HORIZONTAL_ELLIPSIS)
(defchar "mldr" #\HORIZONTAL_ELLIPSIS)
(defchar "permil" #\PER_MILLE_SIGN)
(defchar "pertenk" #\PER_TEN_THOUSAND_SIGN)
(defchar "prime" #\PRIME)
(defchar "Prime" #\DOUBLE_PRIME)
(defchar "tprime" #\TRIPLE_PRIME)
(defchar "bprime" #\REVERSED_PRIME)
(defchar "backprime" #\REVERSED_PRIME)
(defchar "lsaquo" #\SINGLE_LEFT-POINTING_ANGLE_QUOTATION_MARK)
(defchar "rsaquo" #\SINGLE_RIGHT-POINTING_ANGLE_QUOTATION_MARK)
(defchar "oline" #\OVERLINE)
(defchar "caret" #\CARET_INSERTION_POINT)
(defchar "hybull" #\HYPHEN_BULLET)
(defchar "frasl" #\FRACTION_SLASH)
(defchar "bsemi" #\REVERSED_SEMICOLON)
(defchar "qprime" #\QUADRUPLE_PRIME)
(defchar "MediumSpace" #\MEDIUM_MATHEMATICAL_SPACE)
(defchar "NoBreak" #\WORD_JOINER)
(defchar "ApplyFunction" #\FUNCTION_APPLICATION)
(defchar "af" #\FUNCTION_APPLICATION)
(defchar "InvisibleTimes" #\INVISIBLE_TIMES)
(defchar "it" #\INVISIBLE_TIMES)
(defchar "InvisibleComma" #\INVISIBLE_SEPARATOR)
(defchar "ic" #\INVISIBLE_SEPARATOR)
(defchar "tdot" #\COMBINING_THREE_DOTS_ABOVE)
(defchar "TripleDot" #\COMBINING_THREE_DOTS_ABOVE)
(defchar "DotDot" #\COMBINING_FOUR_DOTS_ABOVE)
(defchar "Copf" #\DOUBLE-STRUCK_CAPITAL_C)
(defchar "complexes" #\DOUBLE-STRUCK_CAPITAL_C)
(defchar "incare" #\CARE_OF)
(defchar "gscr" #\SCRIPT_SMALL_G)
(defchar "hamilt" #\SCRIPT_CAPITAL_H)
(defchar "HilbertSpace" #\SCRIPT_CAPITAL_H)
(defchar "Hscr" #\SCRIPT_CAPITAL_H)
(defchar "Hfr" #\BLACK-LETTER_CAPITAL_H)
(defchar "Poincareplane" #\BLACK-LETTER_CAPITAL_H)
(defchar "quaternions" #\DOUBLE-STRUCK_CAPITAL_H)
(defchar "Hopf" #\DOUBLE-STRUCK_CAPITAL_H)
(defchar "planckh" #\PLANCK_CONSTANT)
(defchar "planck" #\PLANCK_CONSTANT_OVER_TWO_PI)
(defchar "hbar" #\PLANCK_CONSTANT_OVER_TWO_PI)
(defchar "plankv" #\PLANCK_CONSTANT_OVER_TWO_PI)
(defchar "hslash" #\PLANCK_CONSTANT_OVER_TWO_PI)
(defchar "Iscr" #\SCRIPT_CAPITAL_I)
(defchar "imagline" #\SCRIPT_CAPITAL_I)
(defchar "image" #\BLACK-LETTER_CAPITAL_I)
(defchar "Im" #\BLACK-LETTER_CAPITAL_I)
(defchar "imagpart" #\BLACK-LETTER_CAPITAL_I)
(defchar "Ifr" #\BLACK-LETTER_CAPITAL_I)
(defchar "Lscr" #\SCRIPT_CAPITAL_L)
(defchar "lagran" #\SCRIPT_CAPITAL_L)
(defchar "Laplacetrf" #\SCRIPT_CAPITAL_L)
(defchar "ell" #\SCRIPT_SMALL_L)
(defchar "Nopf" #\DOUBLE-STRUCK_CAPITAL_N)
(defchar "naturals" #\DOUBLE-STRUCK_CAPITAL_N)
(defchar "numero" #\NUMERO_SIGN)
(defchar "copysr" #\SOUND_RECORDING_COPYRIGHT)
(defchar "weierp" #\SCRIPT_CAPITAL_P)
(defchar "wp" #\SCRIPT_CAPITAL_P)
(defchar "Popf" #\DOUBLE-STRUCK_CAPITAL_P)
(defchar "primes" #\DOUBLE-STRUCK_CAPITAL_P)
(defchar "rationals" #\DOUBLE-STRUCK_CAPITAL_Q)
(defchar "Qopf" #\DOUBLE-STRUCK_CAPITAL_Q)
(defchar "Rscr" #\SCRIPT_CAPITAL_R)
(defchar "realine" #\SCRIPT_CAPITAL_R)
(defchar "real" #\BLACK-LETTER_CAPITAL_R)
(defchar "Re" #\BLACK-LETTER_CAPITAL_R)
(defchar "realpart" #\BLACK-LETTER_CAPITAL_R)
(defchar "Rfr" #\BLACK-LETTER_CAPITAL_R)
(defchar "reals" #\DOUBLE-STRUCK_CAPITAL_R)
(defchar "Ropf" #\DOUBLE-STRUCK_CAPITAL_R)
(defchar "rx" #\PRESCRIPTION_TAKE)
(defchar "TRADE" #\TRADE_MARK_SIGN)
(defchar "integers" #\DOUBLE-STRUCK_CAPITAL_Z)
(defchar "Zopf" #\DOUBLE-STRUCK_CAPITAL_Z)
(defchar "ohm" #\OHM_SIGN)
(defchar "mho" #\INVERTED_OHM_SIGN)
(defchar "Zfr" #\BLACK-LETTER_CAPITAL_Z)
(defchar "zeetrf" #\BLACK-LETTER_CAPITAL_Z)
(defchar "iiota" #\TURNED_GREEK_SMALL_LETTER_IOTA)
(defchar "angst" #\ANGSTROM_SIGN)
(defchar "bernou" #\SCRIPT_CAPITAL_B)
(defchar "Bernoullis" #\SCRIPT_CAPITAL_B)
(defchar "Bscr" #\SCRIPT_CAPITAL_B)
(defchar "Cfr" #\BLACK-LETTER_CAPITAL_C)
(defchar "Cayleys" #\BLACK-LETTER_CAPITAL_C)
(defchar "escr" #\SCRIPT_SMALL_E)
(defchar "Escr" #\SCRIPT_CAPITAL_E)
(defchar "expectation" #\SCRIPT_CAPITAL_E)
(defchar "Fscr" #\SCRIPT_CAPITAL_F)
(defchar "Fouriertrf" #\SCRIPT_CAPITAL_F)
(defchar "phmmat" #\SCRIPT_CAPITAL_M)
(defchar "Mellintrf" #\SCRIPT_CAPITAL_M)
(defchar "Mscr" #\SCRIPT_CAPITAL_M)
(defchar "order" #\SCRIPT_SMALL_O)
(defchar "orderof" #\SCRIPT_SMALL_O)
(defchar "oscr" #\SCRIPT_SMALL_O)
(defchar "alefsym" #\ALEF_SYMBOL)
(defchar "aleph" #\ALEF_SYMBOL)
(defchar "beth" #\BET_SYMBOL)
(defchar "gimel" #\GIMEL_SYMBOL)
(defchar "daleth" #\DALET_SYMBOL)
(defchar "CapitalDifferentialD" #\DOUBLE-STRUCK_ITALIC_CAPITAL_D)
(defchar "DD" #\DOUBLE-STRUCK_ITALIC_CAPITAL_D)
(defchar "DifferentialD" #\DOUBLE-STRUCK_ITALIC_SMALL_D)
(defchar "dd" #\DOUBLE-STRUCK_ITALIC_SMALL_D)
(defchar "ExponentialE" #\DOUBLE-STRUCK_ITALIC_SMALL_E)
(defchar "exponentiale" #\DOUBLE-STRUCK_ITALIC_SMALL_E)
(defchar "ee" #\DOUBLE-STRUCK_ITALIC_SMALL_E)
(defchar "ImaginaryI" #\DOUBLE-STRUCK_ITALIC_SMALL_I)
(defchar "ii" #\DOUBLE-STRUCK_ITALIC_SMALL_I)
(defchar "frac13" #\VULGAR_FRACTION_ONE_THIRD)
(defchar "frac23" #\VULGAR_FRACTION_TWO_THIRDS)
(defchar "frac15" #\VULGAR_FRACTION_ONE_FIFTH)
(defchar "frac25" #\VULGAR_FRACTION_TWO_FIFTHS)
(defchar "frac35" #\VULGAR_FRACTION_THREE_FIFTHS)
(defchar "frac45" #\VULGAR_FRACTION_FOUR_FIFTHS)
(defchar "frac16" #\VULGAR_FRACTION_ONE_SIXTH)
(defchar "frac56" #\VULGAR_FRACTION_FIVE_SIXTHS)
(defchar "frac18" #\VULGAR_FRACTION_ONE_EIGHTH)
(defchar "frac38" #\VULGAR_FRACTION_THREE_EIGHTHS)
(defchar "frac58" #\VULGAR_FRACTION_FIVE_EIGHTHS)
(defchar "frac78" #\VULGAR_FRACTION_SEVEN_EIGHTHS)
(defchar "larr" #\LEFTWARDS_ARROW)
(defchar "leftarrow" #\LEFTWARDS_ARROW)
(defchar "LeftArrow" #\LEFTWARDS_ARROW)
(defchar "slarr" #\LEFTWARDS_ARROW)
(defchar "ShortLeftArrow" #\LEFTWARDS_ARROW)
(defchar "uarr" #\UPWARDS_ARROW)
(defchar "uparrow" #\UPWARDS_ARROW)
(defchar "UpArrow" #\UPWARDS_ARROW)
(defchar "ShortUpArrow" #\UPWARDS_ARROW)
(defchar "rarr" #\RIGHTWARDS_ARROW)
(defchar "rightarrow" #\RIGHTWARDS_ARROW)
(defchar "RightArrow" #\RIGHTWARDS_ARROW)
(defchar "srarr" #\RIGHTWARDS_ARROW)
(defchar "ShortRightArrow" #\RIGHTWARDS_ARROW)
(defchar "darr" #\DOWNWARDS_ARROW)
(defchar "downarrow" #\DOWNWARDS_ARROW)
(defchar "DownArrow" #\DOWNWARDS_ARROW)
(defchar "ShortDownArrow" #\DOWNWARDS_ARROW)
(defchar "harr" #\LEFT_RIGHT_ARROW)
(defchar "leftrightarrow" #\LEFT_RIGHT_ARROW)
(defchar "LeftRightArrow" #\LEFT_RIGHT_ARROW)
(defchar "varr" #\UP_DOWN_ARROW)
(defchar "updownarrow" #\UP_DOWN_ARROW)
(defchar "UpDownArrow" #\UP_DOWN_ARROW)
(defchar "nwarr" #\NORTH_WEST_ARROW)
(defchar "UpperLeftArrow" #\NORTH_WEST_ARROW)
(defchar "nwarrow" #\NORTH_WEST_ARROW)
(defchar "nearr" #\NORTH_EAST_ARROW)
(defchar "UpperRightArrow" #\NORTH_EAST_ARROW)
(defchar "nearrow" #\NORTH_EAST_ARROW)
(defchar "searr" #\SOUTH_EAST_ARROW)
(defchar "searrow" #\SOUTH_EAST_ARROW)
(defchar "LowerRightArrow" #\SOUTH_EAST_ARROW)
(defchar "swarr" #\SOUTH_WEST_ARROW)
(defchar "swarrow" #\SOUTH_WEST_ARROW)
(defchar "LowerLeftArrow" #\SOUTH_WEST_ARROW)
(defchar "nlarr" #\LEFTWARDS_ARROW_WITH_STROKE)
(defchar "nleftarrow" #\LEFTWARDS_ARROW_WITH_STROKE)
(defchar "nrarr" #\RIGHTWARDS_ARROW_WITH_STROKE)
(defchar "nrightarrow" #\RIGHTWARDS_ARROW_WITH_STROKE)
(defchar "rarrw" #\RIGHTWARDS_WAVE_ARROW)
(defchar "rightsquigarrow" #\RIGHTWARDS_WAVE_ARROW)
(defchar "Larr" #\LEFTWARDS_TWO_HEADED_ARROW)
(defchar "twoheadleftarrow" #\LEFTWARDS_TWO_HEADED_ARROW)
(defchar "Uarr" #\UPWARDS_TWO_HEADED_ARROW)
(defchar "Rarr" #\RIGHTWARDS_TWO_HEADED_ARROW)
(defchar "twoheadrightarrow" #\RIGHTWARDS_TWO_HEADED_ARROW)
(defchar "Darr" #\DOWNWARDS_TWO_HEADED_ARROW)
(defchar "larrtl" #\LEFTWARDS_ARROW_WITH_TAIL)
(defchar "leftarrowtail" #\LEFTWARDS_ARROW_WITH_TAIL)
(defchar "rarrtl" #\RIGHTWARDS_ARROW_WITH_TAIL)
(defchar "rightarrowtail" #\RIGHTWARDS_ARROW_WITH_TAIL)
(defchar "LeftTeeArrow" #\LEFTWARDS_ARROW_FROM_BAR)
(defchar "mapstoleft" #\LEFTWARDS_ARROW_FROM_BAR)
(defchar "UpTeeArrow" #\UPWARDS_ARROW_FROM_BAR)
(defchar "mapstoup" #\UPWARDS_ARROW_FROM_BAR)
(defchar "map" #\RIGHTWARDS_ARROW_FROM_BAR)
(defchar "RightTeeArrow" #\RIGHTWARDS_ARROW_FROM_BAR)
(defchar "mapsto" #\RIGHTWARDS_ARROW_FROM_BAR)
(defchar "DownTeeArrow" #\DOWNWARDS_ARROW_FROM_BAR)
(defchar "mapstodown" #\DOWNWARDS_ARROW_FROM_BAR)
(defchar "larrhk" #\LEFTWARDS_ARROW_WITH_HOOK)
(defchar "hookleftarrow" #\LEFTWARDS_ARROW_WITH_HOOK)
(defchar "rarrhk" #\RIGHTWARDS_ARROW_WITH_HOOK)
(defchar "hookrightarrow" #\RIGHTWARDS_ARROW_WITH_HOOK)
(defchar "larrlp" #\LEFTWARDS_ARROW_WITH_LOOP)
(defchar "looparrowleft" #\LEFTWARDS_ARROW_WITH_LOOP)
(defchar "rarrlp" #\RIGHTWARDS_ARROW_WITH_LOOP)
(defchar "looparrowright" #\RIGHTWARDS_ARROW_WITH_LOOP)
(defchar "harrw" #\LEFT_RIGHT_WAVE_ARROW)
(defchar "leftrightsquigarrow" #\LEFT_RIGHT_WAVE_ARROW)
(defchar "nharr" #\LEFT_RIGHT_ARROW_WITH_STROKE)
(defchar "nleftrightarrow" #\LEFT_RIGHT_ARROW_WITH_STROKE)
(defchar "lsh" #\UPWARDS_ARROW_WITH_TIP_LEFTWARDS)
(defchar "Lsh" #\UPWARDS_ARROW_WITH_TIP_LEFTWARDS)
(defchar "rsh" #\UPWARDS_ARROW_WITH_TIP_RIGHTWARDS)
(defchar "Rsh" #\UPWARDS_ARROW_WITH_TIP_RIGHTWARDS)
(defchar "ldsh" #\DOWNWARDS_ARROW_WITH_TIP_LEFTWARDS)
(defchar "rdsh" #\DOWNWARDS_ARROW_WITH_TIP_RIGHTWARDS)
(defchar "crarr" #\DOWNWARDS_ARROW_WITH_CORNER_LEFTWARDS)
(defchar "cularr" #\ANTICLOCKWISE_TOP_SEMICIRCLE_ARROW)
(defchar "curvearrowleft" #\ANTICLOCKWISE_TOP_SEMICIRCLE_ARROW)
(defchar "curarr" #\CLOCKWISE_TOP_SEMICIRCLE_ARROW)
(defchar "curvearrowright" #\CLOCKWISE_TOP_SEMICIRCLE_ARROW)
(defchar "olarr" #\ANTICLOCKWISE_OPEN_CIRCLE_ARROW)
(defchar "circlearrowleft" #\ANTICLOCKWISE_OPEN_CIRCLE_ARROW)
(defchar "orarr" #\CLOCKWISE_OPEN_CIRCLE_ARROW)
(defchar "circlearrowright" #\CLOCKWISE_OPEN_CIRCLE_ARROW)
(defchar "lharu" #\LEFTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "LeftVector" #\LEFTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "leftharpoonup" #\LEFTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "lhard" #\LEFTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "leftharpoondown" #\LEFTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "DownLeftVector" #\LEFTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "uharr" #\UPWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "upharpoonright" #\UPWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "RightUpVector" #\UPWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "uharl" #\UPWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "upharpoonleft" #\UPWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "LeftUpVector" #\UPWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "rharu" #\RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "RightVector" #\RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "rightharpoonup" #\RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS)
(defchar "rhard" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "rightharpoondown" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "DownRightVector" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWNWARDS)
(defchar "dharr" #\DOWNWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "RightDownVector" #\DOWNWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "downharpoonright" #\DOWNWARDS_HARPOON_WITH_BARB_RIGHTWARDS)
(defchar "dharl" #\DOWNWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "LeftDownVector" #\DOWNWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "downharpoonleft" #\DOWNWARDS_HARPOON_WITH_BARB_LEFTWARDS)
(defchar "rlarr" #\RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW)
(defchar "rightleftarrows" #\RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW)
(defchar "RightArrowLeftArrow" #\RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW)
(defchar "udarr" #\UPWARDS_ARROW_LEFTWARDS_OF_DOWNWARDS_ARROW)
(defchar "UpArrowDownArrow" #\UPWARDS_ARROW_LEFTWARDS_OF_DOWNWARDS_ARROW)
(defchar "lrarr" #\LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW)
(defchar "leftrightarrows" #\LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW)
(defchar "LeftArrowRightArrow" #\LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW)
(defchar "llarr" #\LEFTWARDS_PAIRED_ARROWS)
(defchar "leftleftarrows" #\LEFTWARDS_PAIRED_ARROWS)
(defchar "uuarr" #\UPWARDS_PAIRED_ARROWS)
(defchar "upuparrows" #\UPWARDS_PAIRED_ARROWS)
(defchar "rrarr" #\RIGHTWARDS_PAIRED_ARROWS)
(defchar "rightrightarrows" #\RIGHTWARDS_PAIRED_ARROWS)
(defchar "ddarr" #\DOWNWARDS_PAIRED_ARROWS)
(defchar "downdownarrows" #\DOWNWARDS_PAIRED_ARROWS)
(defchar "lrhar" #\LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON)
(defchar "ReverseEquilibrium" #\LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON)
(defchar "leftrightharpoons" #\LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON)
(defchar "rlhar" #\RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON)
(defchar "rightleftharpoons" #\RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON)
(defchar "Equilibrium" #\RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON)
(defchar "nlArr" #\LEFTWARDS_DOUBLE_ARROW_WITH_STROKE)
(defchar "nLeftarrow" #\LEFTWARDS_DOUBLE_ARROW_WITH_STROKE)
(defchar "nhArr" #\LEFT_RIGHT_DOUBLE_ARROW_WITH_STROKE)
(defchar "nLeftrightarrow" #\LEFT_RIGHT_DOUBLE_ARROW_WITH_STROKE)
(defchar "nrArr" #\RIGHTWARDS_DOUBLE_ARROW_WITH_STROKE)
(defchar "nRightarrow" #\RIGHTWARDS_DOUBLE_ARROW_WITH_STROKE)
(defchar "lArr" #\LEFTWARDS_DOUBLE_ARROW)
(defchar "Leftarrow" #\LEFTWARDS_DOUBLE_ARROW)
(defchar "DoubleLeftArrow" #\LEFTWARDS_DOUBLE_ARROW)
(defchar "uArr" #\UPWARDS_DOUBLE_ARROW)
(defchar "Uparrow" #\UPWARDS_DOUBLE_ARROW)
(defchar "DoubleUpArrow" #\UPWARDS_DOUBLE_ARROW)
(defchar "rArr" #\RIGHTWARDS_DOUBLE_ARROW)
(defchar "Rightarrow" #\RIGHTWARDS_DOUBLE_ARROW)
(defchar "Implies" #\RIGHTWARDS_DOUBLE_ARROW)
(defchar "DoubleRightArrow" #\RIGHTWARDS_DOUBLE_ARROW)
(defchar "dArr" #\DOWNWARDS_DOUBLE_ARROW)
(defchar "Downarrow" #\DOWNWARDS_DOUBLE_ARROW)
(defchar "DoubleDownArrow" #\DOWNWARDS_DOUBLE_ARROW)
(defchar "hArr" #\LEFT_RIGHT_DOUBLE_ARROW)
(defchar "Leftrightarrow" #\LEFT_RIGHT_DOUBLE_ARROW)
(defchar "DoubleLeftRightArrow" #\LEFT_RIGHT_DOUBLE_ARROW)
(defchar "iff" #\LEFT_RIGHT_DOUBLE_ARROW)
(defchar "vArr" #\UP_DOWN_DOUBLE_ARROW)
(defchar "Updownarrow" #\UP_DOWN_DOUBLE_ARROW)
(defchar "DoubleUpDownArrow" #\UP_DOWN_DOUBLE_ARROW)
(defchar "nwArr" #\NORTH_WEST_DOUBLE_ARROW)
(defchar "neArr" #\NORTH_EAST_DOUBLE_ARROW)
(defchar "seArr" #\SOUTH_EAST_DOUBLE_ARROW)
(defchar "swArr" #\SOUTH_WEST_DOUBLE_ARROW)
(defchar "lAarr" #\LEFTWARDS_TRIPLE_ARROW)
(defchar "Lleftarrow" #\LEFTWARDS_TRIPLE_ARROW)
(defchar "rAarr" #\RIGHTWARDS_TRIPLE_ARROW)
(defchar "Rrightarrow" #\RIGHTWARDS_TRIPLE_ARROW)
(defchar "zigrarr" #\RIGHTWARDS_SQUIGGLE_ARROW)
(defchar "larrb" #\LEFTWARDS_ARROW_TO_BAR)
(defchar "LeftArrowBar" #\LEFTWARDS_ARROW_TO_BAR)
(defchar "rarrb" #\RIGHTWARDS_ARROW_TO_BAR)
(defchar "RightArrowBar" #\RIGHTWARDS_ARROW_TO_BAR)
(defchar "duarr" #\DOWNWARDS_ARROW_LEFTWARDS_OF_UPWARDS_ARROW)
(defchar "DownArrowUpArrow" #\DOWNWARDS_ARROW_LEFTWARDS_OF_UPWARDS_ARROW)
(defchar "loarr" #\LEFTWARDS_OPEN-HEADED_ARROW)
(defchar "roarr" #\RIGHTWARDS_OPEN-HEADED_ARROW)
(defchar "hoarr" #\LEFT_RIGHT_OPEN-HEADED_ARROW)
(defchar "forall" #\FOR_ALL)
(defchar "ForAll" #\FOR_ALL)
(defchar "comp" #\COMPLEMENT)
(defchar "complement" #\COMPLEMENT)
(defchar "part" #\PARTIAL_DIFFERENTIAL)
(defchar "PartialD" #\PARTIAL_DIFFERENTIAL)
(defchar "exist" #\THERE_EXISTS)
(defchar "Exists" #\THERE_EXISTS)
(defchar "nexist" #\THERE_DOES_NOT_EXIST)
(defchar "NotExists" #\THERE_DOES_NOT_EXIST)
(defchar "nexists" #\THERE_DOES_NOT_EXIST)
(defchar "empty" #\EMPTY_SET)
(defchar "emptyset" #\EMPTY_SET)
(defchar "emptyv" #\EMPTY_SET)
(defchar "varnothing" #\EMPTY_SET)
(defchar "nabla" #\NABLA)
(defchar "Del" #\NABLA)
(defchar "isin" #\ELEMENT_OF)
(defchar "isinv" #\ELEMENT_OF)
(defchar "Element" #\ELEMENT_OF)
(defchar "in" #\ELEMENT_OF)
(defchar "notin" #\NOT_AN_ELEMENT_OF)
(defchar "NotElement" #\NOT_AN_ELEMENT_OF)
(defchar "notinva" #\NOT_AN_ELEMENT_OF)
(defchar "niv" #\CONTAINS_AS_MEMBER)
(defchar "ReverseElement" #\CONTAINS_AS_MEMBER)
(defchar "ni" #\CONTAINS_AS_MEMBER)
(defchar "SuchThat" #\CONTAINS_AS_MEMBER)
(defchar "notni" #\DOES_NOT_CONTAIN_AS_MEMBER)
(defchar "notniva" #\DOES_NOT_CONTAIN_AS_MEMBER)
(defchar "NotReverseElement" #\DOES_NOT_CONTAIN_AS_MEMBER)
(defchar "prod" #\N-ARY_PRODUCT)
(defchar "Product" #\N-ARY_PRODUCT)
(defchar "coprod" #\N-ARY_COPRODUCT)
(defchar "Coproduct" #\N-ARY_COPRODUCT)
(defchar "sum" #\N-ARY_SUMMATION)
(defchar "Sum" #\N-ARY_SUMMATION)
(defchar "minus" #\MINUS_SIGN)
(defchar "mnplus" #\MINUS-OR-PLUS_SIGN)
(defchar "mp" #\MINUS-OR-PLUS_SIGN)
(defchar "MinusPlus" #\MINUS-OR-PLUS_SIGN)
(defchar "plusdo" #\DOT_PLUS)
(defchar "dotplus" #\DOT_PLUS)
(defchar "setmn" #\SET_MINUS)
(defchar "setminus" #\SET_MINUS)
(defchar "Backslash" #\SET_MINUS)
(defchar "ssetmn" #\SET_MINUS)
(defchar "smallsetminus" #\SET_MINUS)
(defchar "lowast" #\ASTERISK_OPERATOR)
(defchar "compfn" #\RING_OPERATOR)
(defchar "SmallCircle" #\RING_OPERATOR)
(defchar "radic" #\SQUARE_ROOT)
(defchar "Sqrt" #\SQUARE_ROOT)
(defchar "prop" #\PROPORTIONAL_TO)
(defchar "propto" #\PROPORTIONAL_TO)
(defchar "Proportional" #\PROPORTIONAL_TO)
(defchar "vprop" #\PROPORTIONAL_TO)
(defchar "varpropto" #\PROPORTIONAL_TO)
(defchar "infin" #\INFINITY)
(defchar "angrt" #\RIGHT_ANGLE)
(defchar "ang" #\ANGLE)
(defchar "angle" #\ANGLE)
(defchar "angmsd" #\MEASURED_ANGLE)
(defchar "measuredangle" #\MEASURED_ANGLE)
(defchar "angsph" #\SPHERICAL_ANGLE)
(defchar "mid" #\DIVIDES)
(defchar "VerticalBar" #\DIVIDES)
(defchar "smid" #\DIVIDES)
(defchar "shortmid" #\DIVIDES)
(defchar "nmid" #\DOES_NOT_DIVIDE)
(defchar "NotVerticalBar" #\DOES_NOT_DIVIDE)
(defchar "nsmid" #\DOES_NOT_DIVIDE)
(defchar "nshortmid" #\DOES_NOT_DIVIDE)
(defchar "par" #\PARALLEL_TO)
(defchar "parallel" #\PARALLEL_TO)
(defchar "DoubleVerticalBar" #\PARALLEL_TO)
(defchar "spar" #\PARALLEL_TO)
(defchar "shortparallel" #\PARALLEL_TO)
(defchar "npar" #\NOT_PARALLEL_TO)
(defchar "nparallel" #\NOT_PARALLEL_TO)
(defchar "NotDoubleVerticalBar" #\NOT_PARALLEL_TO)
(defchar "nspar" #\NOT_PARALLEL_TO)
(defchar "nshortparallel" #\NOT_PARALLEL_TO)
(defchar "and" #\LOGICAL_AND)
(defchar "wedge" #\LOGICAL_AND)
(defchar "or" #\LOGICAL_OR)
(defchar "vee" #\LOGICAL_OR)
(defchar "cap" #\INTERSECTION)
(defchar "cup" #\UNION)
(defchar "int" #\INTEGRAL)
(defchar "Integral" #\INTEGRAL)
(defchar "Int" #\DOUBLE_INTEGRAL)
(defchar "tint" #\TRIPLE_INTEGRAL)
(defchar "iiint" #\TRIPLE_INTEGRAL)
(defchar "conint" #\CONTOUR_INTEGRAL)
(defchar "oint" #\CONTOUR_INTEGRAL)
(defchar "ContourIntegral" #\CONTOUR_INTEGRAL)
(defchar "Conint" #\SURFACE_INTEGRAL)
(defchar "DoubleContourIntegral" #\SURFACE_INTEGRAL)
(defchar "Cconint" #\VOLUME_INTEGRAL)
(defchar "cwint" #\CLOCKWISE_INTEGRAL)
(defchar "cwconint" #\CLOCKWISE_CONTOUR_INTEGRAL)
(defchar "ClockwiseContourIntegral" #\CLOCKWISE_CONTOUR_INTEGRAL)
(defchar "awconint" #\ANTICLOCKWISE_CONTOUR_INTEGRAL)
(defchar "CounterClockwiseContourIntegral" #\ANTICLOCKWISE_CONTOUR_INTEGRAL)
(defchar "there4" #\THEREFORE)
(defchar "therefore" #\THEREFORE)
(defchar "Therefore" #\THEREFORE)
(defchar "becaus" #\BECAUSE)
(defchar "because" #\BECAUSE)
(defchar "Because" #\BECAUSE)
(defchar "ratio" #\RATIO)
(defchar "Colon" #\PROPORTION)
(defchar "Proportion" #\PROPORTION)
(defchar "minusd" #\DOT_MINUS)
(defchar "dotminus" #\DOT_MINUS)
(defchar "mDDot" #\GEOMETRIC_PROPORTION)
(defchar "homtht" #\HOMOTHETIC)
(defchar "sim" #\TILDE_OPERATOR)
(defchar "Tilde" #\TILDE_OPERATOR)
(defchar "thksim" #\TILDE_OPERATOR)
(defchar "thicksim" #\TILDE_OPERATOR)
(defchar "bsim" #\REVERSED_TILDE)
(defchar "backsim" #\REVERSED_TILDE)
(defchar "ac" #\INVERTED_LAZY_S)
(defchar "mstpos" #\INVERTED_LAZY_S)
(defchar "acd" #\SINE_WAVE)
(defchar "wreath" #\WREATH_PRODUCT)
(defchar "VerticalTilde" #\WREATH_PRODUCT)
(defchar "wr" #\WREATH_PRODUCT)
(defchar "nsim" #\NOT_TILDE)
(defchar "NotTilde" #\NOT_TILDE)
(defchar "esim" #\MINUS_TILDE)
(defchar "EqualTilde" #\MINUS_TILDE)
(defchar "eqsim" #\MINUS_TILDE)
(defchar "sime" #\ASYMPTOTICALLY_EQUAL_TO)
(defchar "TildeEqual" #\ASYMPTOTICALLY_EQUAL_TO)
(defchar "simeq" #\ASYMPTOTICALLY_EQUAL_TO)
(defchar "nsime" #\NOT_ASYMPTOTICALLY_EQUAL_TO)
(defchar "nsimeq" #\NOT_ASYMPTOTICALLY_EQUAL_TO)
(defchar "NotTildeEqual" #\NOT_ASYMPTOTICALLY_EQUAL_TO)
(defchar "cong" #\APPROXIMATELY_EQUAL_TO)
(defchar "TildeFullEqual" #\APPROXIMATELY_EQUAL_TO)
(defchar "simne" #\APPROXIMATELY_BUT_NOT_ACTUALLY_EQUAL_TO)
(defchar "ncong" #\NEITHER_APPROXIMATELY_NOR_ACTUALLY_EQUAL_TO)
(defchar "NotTildeFullEqual" #\NEITHER_APPROXIMATELY_NOR_ACTUALLY_EQUAL_TO)
(defchar "asymp" #\ALMOST_EQUAL_TO)
(defchar "ap" #\ALMOST_EQUAL_TO)
(defchar "TildeTilde" #\ALMOST_EQUAL_TO)
(defchar "approx" #\ALMOST_EQUAL_TO)
(defchar "thkap" #\ALMOST_EQUAL_TO)
(defchar "thickapprox" #\ALMOST_EQUAL_TO)
(defchar "nap" #\NOT_ALMOST_EQUAL_TO)
(defchar "NotTildeTilde" #\NOT_ALMOST_EQUAL_TO)
(defchar "napprox" #\NOT_ALMOST_EQUAL_TO)
(defchar "ape" #\ALMOST_EQUAL_OR_EQUAL_TO)
(defchar "approxeq" #\ALMOST_EQUAL_OR_EQUAL_TO)
(defchar "apid" #\TRIPLE_TILDE)
(defchar "bcong" #\ALL_EQUAL_TO)
(defchar "backcong" #\ALL_EQUAL_TO)
(defchar "asympeq" #\EQUIVALENT_TO)
(defchar "CupCap" #\EQUIVALENT_TO)
(defchar "bump" #\GEOMETRICALLY_EQUIVALENT_TO)
(defchar "HumpDownHump" #\GEOMETRICALLY_EQUIVALENT_TO)
(defchar "Bumpeq" #\GEOMETRICALLY_EQUIVALENT_TO)
(defchar "bumpe" #\DIFFERENCE_BETWEEN)
(defchar "HumpEqual" #\DIFFERENCE_BETWEEN)
(defchar "bumpeq" #\DIFFERENCE_BETWEEN)
(defchar "esdot" #\APPROACHES_THE_LIMIT)
(defchar "DotEqual" #\APPROACHES_THE_LIMIT)
(defchar "doteq" #\APPROACHES_THE_LIMIT)
(defchar "eDot" #\GEOMETRICALLY_EQUAL_TO)
(defchar "doteqdot" #\GEOMETRICALLY_EQUAL_TO)
(defchar "efDot" #\APPROXIMATELY_EQUAL_TO_OR_THE_IMAGE_OF)
(defchar "fallingdotseq" #\APPROXIMATELY_EQUAL_TO_OR_THE_IMAGE_OF)
(defchar "erDot" #\IMAGE_OF_OR_APPROXIMATELY_EQUAL_TO)
(defchar "risingdotseq" #\IMAGE_OF_OR_APPROXIMATELY_EQUAL_TO)
(defchar "colone" #\COLON_EQUALS)
(defchar "coloneq" #\COLON_EQUALS)
(defchar "Assign" #\COLON_EQUALS)
(defchar "ecolon" #\EQUALS_COLON)
(defchar "eqcolon" #\EQUALS_COLON)
(defchar "ecir" #\RING_IN_EQUAL_TO)
(defchar "eqcirc" #\RING_IN_EQUAL_TO)
(defchar "cire" #\RING_EQUAL_TO)
(defchar "circeq" #\RING_EQUAL_TO)
(defchar "wedgeq" #\ESTIMATES)
(defchar "veeeq" #\EQUIANGULAR_TO)
(defchar "trie" #\DELTA_EQUAL_TO)
(defchar "triangleq" #\DELTA_EQUAL_TO)
(defchar "equest" #\QUESTIONED_EQUAL_TO)
(defchar "questeq" #\QUESTIONED_EQUAL_TO)
(defchar "ne" #\NOT_EQUAL_TO)
(defchar "NotEqual" #\NOT_EQUAL_TO)
(defchar "equiv" #\IDENTICAL_TO)
(defchar "Congruent" #\IDENTICAL_TO)
(defchar "nequiv" #\NOT_IDENTICAL_TO)
(defchar "NotCongruent" #\NOT_IDENTICAL_TO)
(defchar "le" #\LESS-THAN_OR_EQUAL_TO)
(defchar "leq" #\LESS-THAN_OR_EQUAL_TO)
(defchar "ge" #\GREATER-THAN_OR_EQUAL_TO)
(defchar "GreaterEqual" #\GREATER-THAN_OR_EQUAL_TO)
(defchar "geq" #\GREATER-THAN_OR_EQUAL_TO)
(defchar "lE" #\LESS-THAN_OVER_EQUAL_TO)
(defchar "LessFullEqual" #\LESS-THAN_OVER_EQUAL_TO)
(defchar "leqq" #\LESS-THAN_OVER_EQUAL_TO)
(defchar "gE" #\GREATER-THAN_OVER_EQUAL_TO)
(defchar "GreaterFullEqual" #\GREATER-THAN_OVER_EQUAL_TO)
(defchar "geqq" #\GREATER-THAN_OVER_EQUAL_TO)
(defchar "lnE" #\LESS-THAN_BUT_NOT_EQUAL_TO)
(defchar "lneqq" #\LESS-THAN_BUT_NOT_EQUAL_TO)
(defchar "gnE" #\GREATER-THAN_BUT_NOT_EQUAL_TO)
(defchar "gneqq" #\GREATER-THAN_BUT_NOT_EQUAL_TO)
(defchar "Lt" #\MUCH_LESS-THAN)
(defchar "NestedLessLess" #\MUCH_LESS-THAN)
(defchar "ll" #\MUCH_LESS-THAN)
(defchar "Gt" #\MUCH_GREATER-THAN)
(defchar "NestedGreaterGreater" #\MUCH_GREATER-THAN)
(defchar "gg" #\MUCH_GREATER-THAN)
(defchar "twixt" #\BETWEEN)
(defchar "between" #\BETWEEN)
(defchar "NotCupCap" #\NOT_EQUIVALENT_TO)
(defchar "nlt" #\NOT_LESS-THAN)
(defchar "NotLess" #\NOT_LESS-THAN)
(defchar "nless" #\NOT_LESS-THAN)
(defchar "ngt" #\NOT_GREATER-THAN)
(defchar "NotGreater" #\NOT_GREATER-THAN)
(defchar "ngtr" #\NOT_GREATER-THAN)
(defchar "nle" #\NEITHER_LESS-THAN_NOR_EQUAL_TO)
(defchar "NotLessEqual" #\NEITHER_LESS-THAN_NOR_EQUAL_TO)
(defchar "nleq" #\NEITHER_LESS-THAN_NOR_EQUAL_TO)
(defchar "nge" #\NEITHER_GREATER-THAN_NOR_EQUAL_TO)
(defchar "NotGreaterEqual" #\NEITHER_GREATER-THAN_NOR_EQUAL_TO)
(defchar "ngeq" #\NEITHER_GREATER-THAN_NOR_EQUAL_TO)
(defchar "lsim" #\LESS-THAN_OR_EQUIVALENT_TO)
(defchar "LessTilde" #\LESS-THAN_OR_EQUIVALENT_TO)
(defchar "lesssim" #\LESS-THAN_OR_EQUIVALENT_TO)
(defchar "gsim" #\GREATER-THAN_OR_EQUIVALENT_TO)
(defchar "gtrsim" #\GREATER-THAN_OR_EQUIVALENT_TO)
(defchar "GreaterTilde" #\GREATER-THAN_OR_EQUIVALENT_TO)
(defchar "nlsim" #\NEITHER_LESS-THAN_NOR_EQUIVALENT_TO)
(defchar "NotLessTilde" #\NEITHER_LESS-THAN_NOR_EQUIVALENT_TO)
(defchar "ngsim" #\NEITHER_GREATER-THAN_NOR_EQUIVALENT_TO)
(defchar "NotGreaterTilde" #\NEITHER_GREATER-THAN_NOR_EQUIVALENT_TO)
(defchar "lg" #\LESS-THAN_OR_GREATER-THAN)
(defchar "lessgtr" #\LESS-THAN_OR_GREATER-THAN)
(defchar "LessGreater" #\LESS-THAN_OR_GREATER-THAN)
(defchar "gl" #\GREATER-THAN_OR_LESS-THAN)
(defchar "gtrless" #\GREATER-THAN_OR_LESS-THAN)
(defchar "GreaterLess" #\GREATER-THAN_OR_LESS-THAN)
(defchar "ntlg" #\NEITHER_LESS-THAN_NOR_GREATER-THAN)
(defchar "NotLessGreater" #\NEITHER_LESS-THAN_NOR_GREATER-THAN)
(defchar "ntgl" #\NEITHER_GREATER-THAN_NOR_LESS-THAN)
(defchar "NotGreaterLess" #\NEITHER_GREATER-THAN_NOR_LESS-THAN)
(defchar "pr" #\PRECEDES)
(defchar "Precedes" #\PRECEDES)
(defchar "prec" #\PRECEDES)
(defchar "sc" #\SUCCEEDS)
(defchar "Succeeds" #\SUCCEEDS)
(defchar "succ" #\SUCCEEDS)
(defchar "prcue" #\PRECEDES_OR_EQUAL_TO)
(defchar "PrecedesSlantEqual" #\PRECEDES_OR_EQUAL_TO)
(defchar "preccurlyeq" #\PRECEDES_OR_EQUAL_TO)
(defchar "sccue" #\SUCCEEDS_OR_EQUAL_TO)
(defchar "SucceedsSlantEqual" #\SUCCEEDS_OR_EQUAL_TO)
(defchar "succcurlyeq" #\SUCCEEDS_OR_EQUAL_TO)
(defchar "prsim" #\PRECEDES_OR_EQUIVALENT_TO)
(defchar "precsim" #\PRECEDES_OR_EQUIVALENT_TO)
(defchar "PrecedesTilde" #\PRECEDES_OR_EQUIVALENT_TO)
(defchar "scsim" #\SUCCEEDS_OR_EQUIVALENT_TO)
(defchar "succsim" #\SUCCEEDS_OR_EQUIVALENT_TO)
(defchar "SucceedsTilde" #\SUCCEEDS_OR_EQUIVALENT_TO)
(defchar "npr" #\DOES_NOT_PRECEDE)
(defchar "nprec" #\DOES_NOT_PRECEDE)
(defchar "NotPrecedes" #\DOES_NOT_PRECEDE)
(defchar "nsc" #\DOES_NOT_SUCCEED)
(defchar "nsucc" #\DOES_NOT_SUCCEED)
(defchar "NotSucceeds" #\DOES_NOT_SUCCEED)
(defchar "sub" #\SUBSET_OF)
(defchar "subset" #\SUBSET_OF)
(defchar "sup" #\SUPERSET_OF)
(defchar "supset" #\SUPERSET_OF)
(defchar "Superset" #\SUPERSET_OF)
(defchar "nsub" #\NOT_A_SUBSET_OF)
(defchar "nsup" #\NOT_A_SUPERSET_OF)
(defchar "sube" #\SUBSET_OF_OR_EQUAL_TO)
(defchar "SubsetEqual" #\SUBSET_OF_OR_EQUAL_TO)
(defchar "subseteq" #\SUBSET_OF_OR_EQUAL_TO)
(defchar "supe" #\SUPERSET_OF_OR_EQUAL_TO)
(defchar "supseteq" #\SUPERSET_OF_OR_EQUAL_TO)
(defchar "SupersetEqual" #\SUPERSET_OF_OR_EQUAL_TO)
(defchar "nsube" #\NEITHER_A_SUBSET_OF_NOR_EQUAL_TO)
(defchar "nsubseteq" #\NEITHER_A_SUBSET_OF_NOR_EQUAL_TO)
(defchar "NotSubsetEqual" #\NEITHER_A_SUBSET_OF_NOR_EQUAL_TO)
(defchar "nsupe" #\NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO)
(defchar "nsupseteq" #\NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO)
(defchar "NotSupersetEqual" #\NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO)
(defchar "subne" #\SUBSET_OF_WITH_NOT_EQUAL_TO)
(defchar "subsetneq" #\SUBSET_OF_WITH_NOT_EQUAL_TO)
(defchar "supne" #\SUPERSET_OF_WITH_NOT_EQUAL_TO)
(defchar "supsetneq" #\SUPERSET_OF_WITH_NOT_EQUAL_TO)
(defchar "cupdot" #\MULTISET_MULTIPLICATION)
(defchar "uplus" #\MULTISET_UNION)
(defchar "UnionPlus" #\MULTISET_UNION)
(defchar "sqsub" #\SQUARE_IMAGE_OF)
(defchar "SquareSubset" #\SQUARE_IMAGE_OF)
(defchar "sqsubset" #\SQUARE_IMAGE_OF)
(defchar "sqsup" #\SQUARE_ORIGINAL_OF)
(defchar "SquareSuperset" #\SQUARE_ORIGINAL_OF)
(defchar "sqsupset" #\SQUARE_ORIGINAL_OF)
(defchar "sqsube" #\SQUARE_IMAGE_OF_OR_EQUAL_TO)
(defchar "SquareSubsetEqual" #\SQUARE_IMAGE_OF_OR_EQUAL_TO)
(defchar "sqsubseteq" #\SQUARE_IMAGE_OF_OR_EQUAL_TO)
(defchar "sqsupe" #\SQUARE_ORIGINAL_OF_OR_EQUAL_TO)
(defchar "SquareSupersetEqual" #\SQUARE_ORIGINAL_OF_OR_EQUAL_TO)
(defchar "sqsupseteq" #\SQUARE_ORIGINAL_OF_OR_EQUAL_TO)
(defchar "sqcap" #\SQUARE_CAP)
(defchar "SquareIntersection" #\SQUARE_CAP)
(defchar "sqcup" #\SQUARE_CUP)
(defchar "SquareUnion" #\SQUARE_CUP)
(defchar "oplus" #\CIRCLED_PLUS)
(defchar "CirclePlus" #\CIRCLED_PLUS)
(defchar "ominus" #\CIRCLED_MINUS)
(defchar "CircleMinus" #\CIRCLED_MINUS)
(defchar "otimes" #\CIRCLED_TIMES)
(defchar "CircleTimes" #\CIRCLED_TIMES)
(defchar "osol" #\CIRCLED_DIVISION_SLASH)
(defchar "odot" #\CIRCLED_DOT_OPERATOR)
(defchar "CircleDot" #\CIRCLED_DOT_OPERATOR)
(defchar "ocir" #\CIRCLED_RING_OPERATOR)
(defchar "circledcirc" #\CIRCLED_RING_OPERATOR)
(defchar "oast" #\CIRCLED_ASTERISK_OPERATOR)
(defchar "circledast" #\CIRCLED_ASTERISK_OPERATOR)
(defchar "odash" #\CIRCLED_DASH)
(defchar "circleddash" #\CIRCLED_DASH)
(defchar "plusb" #\SQUARED_PLUS)
(defchar "boxplus" #\SQUARED_PLUS)
(defchar "minusb" #\SQUARED_MINUS)
(defchar "boxminus" #\SQUARED_MINUS)
(defchar "timesb" #\SQUARED_TIMES)
(defchar "boxtimes" #\SQUARED_TIMES)
(defchar "sdotb" #\SQUARED_DOT_OPERATOR)
(defchar "dotsquare" #\SQUARED_DOT_OPERATOR)
(defchar "vdash" #\RIGHT_TACK)
(defchar "RightTee" #\RIGHT_TACK)
(defchar "dashv" #\LEFT_TACK)
(defchar "LeftTee" #\LEFT_TACK)
(defchar "top" #\DOWN_TACK)
(defchar "DownTee" #\DOWN_TACK)
(defchar "bottom" #\UP_TACK)
(defchar "bot" #\UP_TACK)
(defchar "perp" #\UP_TACK)
(defchar "UpTee" #\UP_TACK)
(defchar "models" #\MODELS)
(defchar "vDash" #\TRUE)
(defchar "DoubleRightTee" #\TRUE)
(defchar "Vdash" #\FORCES)
(defchar "Vvdash" #\TRIPLE_VERTICAL_BAR_RIGHT_TURNSTILE)
(defchar "VDash" #\DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE)
(defchar "nvdash" #\DOES_NOT_PROVE)
(defchar "nvDash" #\NOT_TRUE)
(defchar "nVdash" #\DOES_NOT_FORCE)
(defchar "nVDash" #\NEGATED_DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE)
(defchar "prurel" #\PRECEDES_UNDER_RELATION)
(defchar "vltri" #\NORMAL_SUBGROUP_OF)
(defchar "vartriangleleft" #\NORMAL_SUBGROUP_OF)
(defchar "LeftTriangle" #\NORMAL_SUBGROUP_OF)
(defchar "vrtri" #\CONTAINS_AS_NORMAL_SUBGROUP)
(defchar "vartriangleright" #\CONTAINS_AS_NORMAL_SUBGROUP)
(defchar "RightTriangle" #\CONTAINS_AS_NORMAL_SUBGROUP)
(defchar "ltrie" #\NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "trianglelefteq" #\NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "LeftTriangleEqual" #\NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "rtrie" #\CONTAINS_AS_NORMAL_SUBGROUP_OR_EQUAL_TO)
(defchar "trianglerighteq" #\CONTAINS_AS_NORMAL_SUBGROUP_OR_EQUAL_TO)
(defchar "RightTriangleEqual" #\CONTAINS_AS_NORMAL_SUBGROUP_OR_EQUAL_TO)
(defchar "origof" #\ORIGINAL_OF)
(defchar "imof" #\IMAGE_OF)
(defchar "mumap" #\MULTIMAP)
(defchar "multimap" #\MULTIMAP)
(defchar "hercon" #\HERMITIAN_CONJUGATE_MATRIX)
(defchar "intcal" #\INTERCALATE)
(defchar "intercal" #\INTERCALATE)
(defchar "veebar" #\XOR)
(defchar "barvee" #\NOR)
(defchar "angrtvb" #\RIGHT_ANGLE_WITH_ARC)
(defchar "lrtri" #\RIGHT_TRIANGLE)
(defchar "xwedge" #\N-ARY_LOGICAL_AND)
(defchar "Wedge" #\N-ARY_LOGICAL_AND)
(defchar "bigwedge" #\N-ARY_LOGICAL_AND)
(defchar "xvee" #\N-ARY_LOGICAL_OR)
(defchar "Vee" #\N-ARY_LOGICAL_OR)
(defchar "bigvee" #\N-ARY_LOGICAL_OR)
(defchar "xcap" #\N-ARY_INTERSECTION)
(defchar "Intersection" #\N-ARY_INTERSECTION)
(defchar "bigcap" #\N-ARY_INTERSECTION)
(defchar "xcup" #\N-ARY_UNION)
(defchar "Union" #\N-ARY_UNION)
(defchar "bigcup" #\N-ARY_UNION)
(defchar "diam" #\DIAMOND_OPERATOR)
(defchar "diamond" #\DIAMOND_OPERATOR)
(defchar "Diamond" #\DIAMOND_OPERATOR)
(defchar "sdot" #\DOT_OPERATOR)
(defchar "sstarf" #\STAR_OPERATOR)
(defchar "Star" #\STAR_OPERATOR)
(defchar "divonx" #\DIVISION_TIMES)
(defchar "divideontimes" #\DIVISION_TIMES)
(defchar "bowtie" #\BOWTIE)
(defchar "ltimes" #\LEFT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT)
(defchar "rtimes" #\RIGHT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT)
(defchar "lthree" #\LEFT_SEMIDIRECT_PRODUCT)
(defchar "leftthreetimes" #\LEFT_SEMIDIRECT_PRODUCT)
(defchar "rthree" #\RIGHT_SEMIDIRECT_PRODUCT)
(defchar "rightthreetimes" #\RIGHT_SEMIDIRECT_PRODUCT)
(defchar "bsime" #\REVERSED_TILDE_EQUALS)
(defchar "backsimeq" #\REVERSED_TILDE_EQUALS)
(defchar "cuvee" #\CURLY_LOGICAL_OR)
(defchar "curlyvee" #\CURLY_LOGICAL_OR)
(defchar "cuwed" #\CURLY_LOGICAL_AND)
(defchar "curlywedge" #\CURLY_LOGICAL_AND)
(defchar "Sub" #\DOUBLE_SUBSET)
(defchar "Subset" #\DOUBLE_SUBSET)
(defchar "Sup" #\DOUBLE_SUPERSET)
(defchar "Supset" #\DOUBLE_SUPERSET)
(defchar "Cap" #\DOUBLE_INTERSECTION)
(defchar "Cup" #\DOUBLE_UNION)
(defchar "fork" #\PITCHFORK)
(defchar "pitchfork" #\PITCHFORK)
(defchar "epar" #\EQUAL_AND_PARALLEL_TO)
(defchar "ltdot" #\LESS-THAN_WITH_DOT)
(defchar "lessdot" #\LESS-THAN_WITH_DOT)
(defchar "gtdot" #\GREATER-THAN_WITH_DOT)
(defchar "gtrdot" #\GREATER-THAN_WITH_DOT)
(defchar "Ll" #\VERY_MUCH_LESS-THAN)
(defchar "Gg" #\VERY_MUCH_GREATER-THAN)
(defchar "ggg" #\VERY_MUCH_GREATER-THAN)
(defchar "leg" #\LESS-THAN_EQUAL_TO_OR_GREATER-THAN)
(defchar "LessEqualGreater" #\LESS-THAN_EQUAL_TO_OR_GREATER-THAN)
(defchar "lesseqgtr" #\LESS-THAN_EQUAL_TO_OR_GREATER-THAN)
(defchar "gel" #\GREATER-THAN_EQUAL_TO_OR_LESS-THAN)
(defchar "gtreqless" #\GREATER-THAN_EQUAL_TO_OR_LESS-THAN)
(defchar "GreaterEqualLess" #\GREATER-THAN_EQUAL_TO_OR_LESS-THAN)
(defchar "cuepr" #\EQUAL_TO_OR_PRECEDES)
(defchar "curlyeqprec" #\EQUAL_TO_OR_PRECEDES)
(defchar "cuesc" #\EQUAL_TO_OR_SUCCEEDS)
(defchar "curlyeqsucc" #\EQUAL_TO_OR_SUCCEEDS)
(defchar "nprcue" #\DOES_NOT_PRECEDE_OR_EQUAL)
(defchar "NotPrecedesSlantEqual" #\DOES_NOT_PRECEDE_OR_EQUAL)
(defchar "nsccue" #\DOES_NOT_SUCCEED_OR_EQUAL)
(defchar "NotSucceedsSlantEqual" #\DOES_NOT_SUCCEED_OR_EQUAL)
(defchar "nsqsube" #\NOT_SQUARE_IMAGE_OF_OR_EQUAL_TO)
(defchar "NotSquareSubsetEqual" #\NOT_SQUARE_IMAGE_OF_OR_EQUAL_TO)
(defchar "nsqsupe" #\NOT_SQUARE_ORIGINAL_OF_OR_EQUAL_TO)
(defchar "NotSquareSupersetEqual" #\NOT_SQUARE_ORIGINAL_OF_OR_EQUAL_TO)
(defchar "lnsim" #\LESS-THAN_BUT_NOT_EQUIVALENT_TO)
(defchar "gnsim" #\GREATER-THAN_BUT_NOT_EQUIVALENT_TO)
(defchar "prnsim" #\PRECEDES_BUT_NOT_EQUIVALENT_TO)
(defchar "precnsim" #\PRECEDES_BUT_NOT_EQUIVALENT_TO)
(defchar "scnsim" #\SUCCEEDS_BUT_NOT_EQUIVALENT_TO)
(defchar "succnsim" #\SUCCEEDS_BUT_NOT_EQUIVALENT_TO)
(defchar "nltri" #\NOT_NORMAL_SUBGROUP_OF)
(defchar "ntriangleleft" #\NOT_NORMAL_SUBGROUP_OF)
(defchar "NotLeftTriangle" #\NOT_NORMAL_SUBGROUP_OF)
(defchar "nrtri" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP)
(defchar "ntriangleright" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP)
(defchar "NotRightTriangle" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP)
(defchar "nltrie" #\NOT_NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "ntrianglelefteq" #\NOT_NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "NotLeftTriangleEqual" #\NOT_NORMAL_SUBGROUP_OF_OR_EQUAL_TO)
(defchar "nrtrie" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP_OR_EQUAL)
(defchar "ntrianglerighteq" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP_OR_EQUAL)
(defchar "NotRightTriangleEqual" #\DOES_NOT_CONTAIN_AS_NORMAL_SUBGROUP_OR_EQUAL)
(defchar "vellip" #\VERTICAL_ELLIPSIS)
(defchar "ctdot" #\MIDLINE_HORIZONTAL_ELLIPSIS)
(defchar "utdot" #\UP_RIGHT_DIAGONAL_ELLIPSIS)
(defchar "dtdot" #\DOWN_RIGHT_DIAGONAL_ELLIPSIS)
(defchar "disin" #\ELEMENT_OF_WITH_LONG_HORIZONTAL_STROKE)
(defchar "isinsv" #\ELEMENT_OF_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE)
(defchar "isins" #\SMALL_ELEMENT_OF_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE)
(defchar "isindot" #\ELEMENT_OF_WITH_DOT_ABOVE)
(defchar "notinvc" #\ELEMENT_OF_WITH_OVERBAR)
(defchar "notinvb" #\SMALL_ELEMENT_OF_WITH_OVERBAR)
(defchar "isinE" #\ELEMENT_OF_WITH_TWO_HORIZONTAL_STROKES)
(defchar "nisd" #\CONTAINS_WITH_LONG_HORIZONTAL_STROKE)
(defchar "xnis" #\CONTAINS_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE)
(defchar "nis" #\SMALL_CONTAINS_WITH_VERTICAL_BAR_AT_END_OF_HORIZONTAL_STROKE)
(defchar "notnivc" #\CONTAINS_WITH_OVERBAR)
(defchar "notnivb" #\SMALL_CONTAINS_WITH_OVERBAR)
(defchar "barwed" #\PROJECTIVE)
(defchar "barwedge" #\PROJECTIVE)
(defchar "Barwed" #\PERSPECTIVE)
(defchar "doublebarwedge" #\PERSPECTIVE)
(defchar "lceil" #\LEFT_CEILING)
(defchar "LeftCeiling" #\LEFT_CEILING)
(defchar "rceil" #\RIGHT_CEILING)
(defchar "RightCeiling" #\RIGHT_CEILING)
(defchar "lfloor" #\LEFT_FLOOR)
(defchar "LeftFloor" #\LEFT_FLOOR)
(defchar "rfloor" #\RIGHT_FLOOR)
(defchar "RightFloor" #\RIGHT_FLOOR)
(defchar "drcrop" #\BOTTOM_RIGHT_CROP)
(defchar "dlcrop" #\BOTTOM_LEFT_CROP)
(defchar "urcrop" #\TOP_RIGHT_CROP)
(defchar "ulcrop" #\TOP_LEFT_CROP)
(defchar "bnot" #\REVERSED_NOT_SIGN)
(defchar "profline" #\ARC)
(defchar "profsurf" #\SEGMENT)
(defchar "telrec" #\TELEPHONE_RECORDER)
(defchar "target" #\POSITION_INDICATOR)
(defchar "ulcorn" #\TOP_LEFT_CORNER)
(defchar "ulcorner" #\TOP_LEFT_CORNER)
(defchar "urcorn" #\TOP_RIGHT_CORNER)
(defchar "urcorner" #\TOP_RIGHT_CORNER)
(defchar "dlcorn" #\BOTTOM_LEFT_CORNER)
(defchar "llcorner" #\BOTTOM_LEFT_CORNER)
(defchar "drcorn" #\BOTTOM_RIGHT_CORNER)
(defchar "lrcorner" #\BOTTOM_RIGHT_CORNER)
(defchar "frown" #\FROWN)
(defchar "sfrown" #\FROWN)
(defchar "smile" #\SMILE)
(defchar "ssmile" #\SMILE)
(defchar "cylcty" #\CYLINDRICITY)
(defchar "profalar" #\ALL_AROUND-PROFILE)
(defchar "topbot" #\APL_FUNCTIONAL_SYMBOL_I-BEAM)
(defchar "ovbar" #\APL_FUNCTIONAL_SYMBOL_CIRCLE_STILE)
(defchar "solbar" #\APL_FUNCTIONAL_SYMBOL_SLASH_BAR)
(defchar "angzarr" #\RIGHT_ANGLE_WITH_DOWNWARDS_ZIGZAG_ARROW)
(defchar "lmoust" #\UPPER_LEFT_OR_LOWER_RIGHT_CURLY_BRACKET_SECTION)
(defchar "lmoustache" #\UPPER_LEFT_OR_LOWER_RIGHT_CURLY_BRACKET_SECTION)
(defchar "rmoust" #\UPPER_RIGHT_OR_LOWER_LEFT_CURLY_BRACKET_SECTION)
(defchar "rmoustache" #\UPPER_RIGHT_OR_LOWER_LEFT_CURLY_BRACKET_SECTION)
(defchar "tbrk" #\TOP_SQUARE_BRACKET)
(defchar "OverBracket" #\TOP_SQUARE_BRACKET)
(defchar "bbrk" #\BOTTOM_SQUARE_BRACKET)
(defchar "UnderBracket" #\BOTTOM_SQUARE_BRACKET)
(defchar "bbrktbrk" #\BOTTOM_SQUARE_BRACKET_OVER_TOP_SQUARE_BRACKET)
(defchar "OverParenthesis" #\TOP_PARENTHESIS)
(defchar "UnderParenthesis" #\BOTTOM_PARENTHESIS)
(defchar "OverBrace" #\TOP_CURLY_BRACKET)
(defchar "UnderBrace" #\BOTTOM_CURLY_BRACKET)
(defchar "trpezium" #\WHITE_TRAPEZIUM)
(defchar "elinters" #\ELECTRICAL_INTERSECTION)
(defchar "blank" #\OPEN_BOX)
(defchar "oS" #\CIRCLED_LATIN_CAPITAL_LETTER_S)
(defchar "circledS" #\CIRCLED_LATIN_CAPITAL_LETTER_S)
(defchar "boxh" #\BOX_DRAWINGS_LIGHT_HORIZONTAL)
(defchar "HorizontalLine" #\BOX_DRAWINGS_LIGHT_HORIZONTAL)
(defchar "boxv" #\BOX_DRAWINGS_LIGHT_VERTICAL)
(defchar "boxdr" #\BOX_DRAWINGS_LIGHT_DOWN_AND_RIGHT)
(defchar "boxdl" #\BOX_DRAWINGS_LIGHT_DOWN_AND_LEFT)
(defchar "boxur" #\BOX_DRAWINGS_LIGHT_UP_AND_RIGHT)
(defchar "boxul" #\BOX_DRAWINGS_LIGHT_UP_AND_LEFT)
(defchar "boxvr" #\BOX_DRAWINGS_LIGHT_VERTICAL_AND_RIGHT)
(defchar "boxvl" #\BOX_DRAWINGS_LIGHT_VERTICAL_AND_LEFT)
(defchar "boxhd" #\BOX_DRAWINGS_LIGHT_DOWN_AND_HORIZONTAL)
(defchar "boxhu" #\BOX_DRAWINGS_LIGHT_UP_AND_HORIZONTAL)
(defchar "boxvh" #\BOX_DRAWINGS_LIGHT_VERTICAL_AND_HORIZONTAL)
(defchar "boxH" #\BOX_DRAWINGS_DOUBLE_HORIZONTAL)
(defchar "boxV" #\BOX_DRAWINGS_DOUBLE_VERTICAL)
(defchar "boxdR" #\BOX_DRAWINGS_DOWN_SINGLE_AND_RIGHT_DOUBLE)
(defchar "boxDr" #\BOX_DRAWINGS_DOWN_DOUBLE_AND_RIGHT_SINGLE)
(defchar "boxDR" #\BOX_DRAWINGS_DOUBLE_DOWN_AND_RIGHT)
(defchar "boxdL" #\BOX_DRAWINGS_DOWN_SINGLE_AND_LEFT_DOUBLE)
(defchar "boxDl" #\BOX_DRAWINGS_DOWN_DOUBLE_AND_LEFT_SINGLE)
(defchar "boxDL" #\BOX_DRAWINGS_DOUBLE_DOWN_AND_LEFT)
(defchar "boxuR" #\BOX_DRAWINGS_UP_SINGLE_AND_RIGHT_DOUBLE)
(defchar "boxUr" #\BOX_DRAWINGS_UP_DOUBLE_AND_RIGHT_SINGLE)
(defchar "boxUR" #\BOX_DRAWINGS_DOUBLE_UP_AND_RIGHT)
(defchar "boxuL" #\BOX_DRAWINGS_UP_SINGLE_AND_LEFT_DOUBLE)
(defchar "boxUl" #\BOX_DRAWINGS_UP_DOUBLE_AND_LEFT_SINGLE)
(defchar "boxUL" #\BOX_DRAWINGS_DOUBLE_UP_AND_LEFT)
(defchar "boxvR" #\BOX_DRAWINGS_VERTICAL_SINGLE_AND_RIGHT_DOUBLE)
(defchar "boxVr" #\BOX_DRAWINGS_VERTICAL_DOUBLE_AND_RIGHT_SINGLE)
(defchar "boxVR" #\BOX_DRAWINGS_DOUBLE_VERTICAL_AND_RIGHT)
(defchar "boxvL" #\BOX_DRAWINGS_VERTICAL_SINGLE_AND_LEFT_DOUBLE)
(defchar "boxVl" #\BOX_DRAWINGS_VERTICAL_DOUBLE_AND_LEFT_SINGLE)
(defchar "boxVL" #\BOX_DRAWINGS_DOUBLE_VERTICAL_AND_LEFT)
(defchar "boxHd" #\BOX_DRAWINGS_DOWN_SINGLE_AND_HORIZONTAL_DOUBLE)
(defchar "boxhD" #\BOX_DRAWINGS_DOWN_DOUBLE_AND_HORIZONTAL_SINGLE)
(defchar "boxHD" #\BOX_DRAWINGS_DOUBLE_DOWN_AND_HORIZONTAL)
(defchar "boxHu" #\BOX_DRAWINGS_UP_SINGLE_AND_HORIZONTAL_DOUBLE)
(defchar "boxhU" #\BOX_DRAWINGS_UP_DOUBLE_AND_HORIZONTAL_SINGLE)
(defchar "boxHU" #\BOX_DRAWINGS_DOUBLE_UP_AND_HORIZONTAL)
(defchar "boxvH" #\BOX_DRAWINGS_VERTICAL_SINGLE_AND_HORIZONTAL_DOUBLE)
(defchar "boxVh" #\BOX_DRAWINGS_VERTICAL_DOUBLE_AND_HORIZONTAL_SINGLE)
(defchar "boxVH" #\BOX_DRAWINGS_DOUBLE_VERTICAL_AND_HORIZONTAL)
(defchar "uhblk" #\UPPER_HALF_BLOCK)
(defchar "lhblk" #\LOWER_HALF_BLOCK)
(defchar "block" #\FULL_BLOCK)
(defchar "blk14" #\LIGHT_SHADE)
(defchar "blk12" #\MEDIUM_SHADE)
(defchar "blk34" #\DARK_SHADE)
(defchar "squ" #\WHITE_SQUARE)
(defchar "square" #\WHITE_SQUARE)
(defchar "Square" #\WHITE_SQUARE)
(defchar "squf" #\BLACK_SMALL_SQUARE)
(defchar "squarf" #\BLACK_SMALL_SQUARE)
(defchar "blacksquare" #\BLACK_SMALL_SQUARE)
(defchar "FilledVerySmallSquare" #\BLACK_SMALL_SQUARE)
(defchar "EmptyVerySmallSquare" #\WHITE_SMALL_SQUARE)
(defchar "rect" #\WHITE_RECTANGLE)
(defchar "marker" #\BLACK_VERTICAL_RECTANGLE)
(defchar "fltns" #\WHITE_PARALLELOGRAM)
(defchar "xutri" #\WHITE_UP-POINTING_TRIANGLE)
(defchar "bigtriangleup" #\WHITE_UP-POINTING_TRIANGLE)
(defchar "utrif" #\BLACK_UP-POINTING_SMALL_TRIANGLE)
(defchar "blacktriangle" #\BLACK_UP-POINTING_SMALL_TRIANGLE)
(defchar "utri" #\WHITE_UP-POINTING_SMALL_TRIANGLE)
(defchar "triangle" #\WHITE_UP-POINTING_SMALL_TRIANGLE)
(defchar "rtrif" #\BLACK_RIGHT-POINTING_SMALL_TRIANGLE)
(defchar "blacktriangleright" #\BLACK_RIGHT-POINTING_SMALL_TRIANGLE)
(defchar "rtri" #\WHITE_RIGHT-POINTING_SMALL_TRIANGLE)
(defchar "triangleright" #\WHITE_RIGHT-POINTING_SMALL_TRIANGLE)
(defchar "xdtri" #\WHITE_DOWN-POINTING_TRIANGLE)
(defchar "bigtriangledown" #\WHITE_DOWN-POINTING_TRIANGLE)
(defchar "dtrif" #\BLACK_DOWN-POINTING_SMALL_TRIANGLE)
(defchar "blacktriangledown" #\BLACK_DOWN-POINTING_SMALL_TRIANGLE)
(defchar "dtri" #\WHITE_DOWN-POINTING_SMALL_TRIANGLE)
(defchar "triangledown" #\WHITE_DOWN-POINTING_SMALL_TRIANGLE)
(defchar "ltrif" #\BLACK_LEFT-POINTING_SMALL_TRIANGLE)
(defchar "blacktriangleleft" #\BLACK_LEFT-POINTING_SMALL_TRIANGLE)
(defchar "ltri" #\WHITE_LEFT-POINTING_SMALL_TRIANGLE)
(defchar "triangleleft" #\WHITE_LEFT-POINTING_SMALL_TRIANGLE)
(defchar "loz" #\LOZENGE)
(defchar "lozenge" #\LOZENGE)
(defchar "cir" #\WHITE_CIRCLE)
(defchar "tridot" #\WHITE_UP-POINTING_TRIANGLE_WITH_DOT)
(defchar "xcirc" #\LARGE_CIRCLE)
(defchar "bigcirc" #\LARGE_CIRCLE)
(defchar "ultri" #\UPPER_LEFT_TRIANGLE)
(defchar "urtri" #\UPPER_RIGHT_TRIANGLE)
(defchar "lltri" #\LOWER_LEFT_TRIANGLE)
(defchar "EmptySmallSquare" #\WHITE_MEDIUM_SQUARE)
(defchar "FilledSmallSquare" #\BLACK_MEDIUM_SQUARE)
(defchar "starf" #\BLACK_STAR)
(defchar "bigstar" #\BLACK_STAR)
(defchar "star" #\WHITE_STAR)
(defchar "phone" #\BLACK_TELEPHONE)
(defchar "female" #\FEMALE_SIGN)
(defchar "male" #\MALE_SIGN)
(defchar "spades" #\BLACK_SPADE_SUIT)
(defchar "spadesuit" #\BLACK_SPADE_SUIT)
(defchar "clubs" #\BLACK_CLUB_SUIT)
(defchar "clubsuit" #\BLACK_CLUB_SUIT)
(defchar "hearts" #\BLACK_HEART_SUIT)
(defchar "heartsuit" #\BLACK_HEART_SUIT)
(defchar "diams" #\BLACK_DIAMOND_SUIT)
(defchar "diamondsuit" #\BLACK_DIAMOND_SUIT)
(defchar "sung" #\EIGHTH_NOTE)
(defchar "flat" #\MUSIC_FLAT_SIGN)
(defchar "natur" #\MUSIC_NATURAL_SIGN)
(defchar "natural" #\MUSIC_NATURAL_SIGN)
(defchar "sharp" #\MUSIC_SHARP_SIGN)
(defchar "check" #\CHECK_MARK)
(defchar "checkmark" #\CHECK_MARK)
(defchar "cross" #\BALLOT_X)
(defchar "malt" #\MALTESE_CROSS)
(defchar "maltese" #\MALTESE_CROSS)
(defchar "sext" #\SIX_POINTED_BLACK_STAR)
(defchar "VerticalSeparator" #\LIGHT_VERTICAL_BAR)
(defchar "lbbrk" #\LIGHT_LEFT_TORTOISE_SHELL_BRACKET_ORNAMENT)
(defchar "rbbrk" #\LIGHT_RIGHT_TORTOISE_SHELL_BRACKET_ORNAMENT)
(defchar "lobrk" #\MATHEMATICAL_LEFT_WHITE_SQUARE_BRACKET)
(defchar "LeftDoubleBracket" #\MATHEMATICAL_LEFT_WHITE_SQUARE_BRACKET)
(defchar "robrk" #\MATHEMATICAL_RIGHT_WHITE_SQUARE_BRACKET)
(defchar "RightDoubleBracket" #\MATHEMATICAL_RIGHT_WHITE_SQUARE_BRACKET)
(defchar "lang" #\MATHEMATICAL_LEFT_ANGLE_BRACKET)
(defchar "LeftAngleBracket" #\MATHEMATICAL_LEFT_ANGLE_BRACKET)
(defchar "langle" #\MATHEMATICAL_LEFT_ANGLE_BRACKET)
(defchar "rang" #\MATHEMATICAL_RIGHT_ANGLE_BRACKET)
(defchar "RightAngleBracket" #\MATHEMATICAL_RIGHT_ANGLE_BRACKET)
(defchar "rangle" #\MATHEMATICAL_RIGHT_ANGLE_BRACKET)
(defchar "Lang" #\MATHEMATICAL_LEFT_DOUBLE_ANGLE_BRACKET)
(defchar "Rang" #\MATHEMATICAL_RIGHT_DOUBLE_ANGLE_BRACKET)
(defchar "loang" #\MATHEMATICAL_LEFT_WHITE_TORTOISE_SHELL_BRACKET)
(defchar "roang" #\MATHEMATICAL_RIGHT_WHITE_TORTOISE_SHELL_BRACKET)
(defchar "xlarr" #\LONG_LEFTWARDS_ARROW)
(defchar "longleftarrow" #\LONG_LEFTWARDS_ARROW)
(defchar "LongLeftArrow" #\LONG_LEFTWARDS_ARROW)
(defchar "xrarr" #\LONG_RIGHTWARDS_ARROW)
(defchar "longrightarrow" #\LONG_RIGHTWARDS_ARROW)
(defchar "LongRightArrow" #\LONG_RIGHTWARDS_ARROW)
(defchar "xharr" #\LONG_LEFT_RIGHT_ARROW)
(defchar "longleftrightarrow" #\LONG_LEFT_RIGHT_ARROW)
(defchar "LongLeftRightArrow" #\LONG_LEFT_RIGHT_ARROW)
(defchar "xlArr" #\LONG_LEFTWARDS_DOUBLE_ARROW)
(defchar "Longleftarrow" #\LONG_LEFTWARDS_DOUBLE_ARROW)
(defchar "DoubleLongLeftArrow" #\LONG_LEFTWARDS_DOUBLE_ARROW)
(defchar "xrArr" #\LONG_RIGHTWARDS_DOUBLE_ARROW)
(defchar "Longrightarrow" #\LONG_RIGHTWARDS_DOUBLE_ARROW)
(defchar "DoubleLongRightArrow" #\LONG_RIGHTWARDS_DOUBLE_ARROW)
(defchar "xhArr" #\LONG_LEFT_RIGHT_DOUBLE_ARROW)
(defchar "Longleftrightarrow" #\LONG_LEFT_RIGHT_DOUBLE_ARROW)
(defchar "DoubleLongLeftRightArrow" #\LONG_LEFT_RIGHT_DOUBLE_ARROW)
(defchar "xmap" #\LONG_RIGHTWARDS_ARROW_FROM_BAR)
(defchar "longmapsto" #\LONG_RIGHTWARDS_ARROW_FROM_BAR)
(defchar "dzigrarr" #\LONG_RIGHTWARDS_SQUIGGLE_ARROW)
(defchar "nvlArr" #\LEFTWARDS_DOUBLE_ARROW_WITH_VERTICAL_STROKE)
(defchar "nvrArr" #\RIGHTWARDS_DOUBLE_ARROW_WITH_VERTICAL_STROKE)
(defchar "nvHarr" #\LEFT_RIGHT_DOUBLE_ARROW_WITH_VERTICAL_STROKE)
(defchar "Map" #\RIGHTWARDS_TWO-HEADED_ARROW_FROM_BAR)
(defchar "lbarr" #\LEFTWARDS_DOUBLE_DASH_ARROW)
(defchar "rbarr" #\RIGHTWARDS_DOUBLE_DASH_ARROW)
(defchar "bkarow" #\RIGHTWARDS_DOUBLE_DASH_ARROW)
(defchar "lBarr" #\LEFTWARDS_TRIPLE_DASH_ARROW)
(defchar "rBarr" #\RIGHTWARDS_TRIPLE_DASH_ARROW)
(defchar "dbkarow" #\RIGHTWARDS_TRIPLE_DASH_ARROW)
(defchar "RBarr" #\RIGHTWARDS_TWO-HEADED_TRIPLE_DASH_ARROW)
(defchar "drbkarow" #\RIGHTWARDS_TWO-HEADED_TRIPLE_DASH_ARROW)
(defchar "DDotrahd" #\RIGHTWARDS_ARROW_WITH_DOTTED_STEM)
(defchar "UpArrowBar" #\UPWARDS_ARROW_TO_BAR)
(defchar "DownArrowBar" #\DOWNWARDS_ARROW_TO_BAR)
(defchar "Rarrtl" #\RIGHTWARDS_TWO-HEADED_ARROW_WITH_TAIL)
(defchar "latail" #\LEFTWARDS_ARROW-TAIL)
(defchar "ratail" #\RIGHTWARDS_ARROW-TAIL)
(defchar "lAtail" #\LEFTWARDS_DOUBLE_ARROW-TAIL)
(defchar "rAtail" #\RIGHTWARDS_DOUBLE_ARROW-TAIL)
(defchar "larrfs" #\LEFTWARDS_ARROW_TO_BLACK_DIAMOND)
(defchar "rarrfs" #\RIGHTWARDS_ARROW_TO_BLACK_DIAMOND)
(defchar "larrbfs" #\LEFTWARDS_ARROW_FROM_BAR_TO_BLACK_DIAMOND)
(defchar "rarrbfs" #\RIGHTWARDS_ARROW_FROM_BAR_TO_BLACK_DIAMOND)
(defchar "nwarhk" #\NORTH_WEST_ARROW_WITH_HOOK)
(defchar "nearhk" #\NORTH_EAST_ARROW_WITH_HOOK)
(defchar "searhk" #\SOUTH_EAST_ARROW_WITH_HOOK)
(defchar "hksearow" #\SOUTH_EAST_ARROW_WITH_HOOK)
(defchar "swarhk" #\SOUTH_WEST_ARROW_WITH_HOOK)
(defchar "hkswarow" #\SOUTH_WEST_ARROW_WITH_HOOK)
(defchar "nwnear" #\NORTH_WEST_ARROW_AND_NORTH_EAST_ARROW)
(defchar "nesear" #\NORTH_EAST_ARROW_AND_SOUTH_EAST_ARROW)
(defchar "toea" #\NORTH_EAST_ARROW_AND_SOUTH_EAST_ARROW)
(defchar "seswar" #\SOUTH_EAST_ARROW_AND_SOUTH_WEST_ARROW)
(defchar "tosa" #\SOUTH_EAST_ARROW_AND_SOUTH_WEST_ARROW)
(defchar "swnwar" #\SOUTH_WEST_ARROW_AND_NORTH_WEST_ARROW)
(defchar "rarrc" #\WAVE_ARROW_POINTING_DIRECTLY_RIGHT)
(defchar "cudarrr" #\ARROW_POINTING_RIGHTWARDS_THEN_CURVING_DOWNWARDS)
(defchar "ldca" #\ARROW_POINTING_DOWNWARDS_THEN_CURVING_LEFTWARDS)
(defchar "rdca" #\ARROW_POINTING_DOWNWARDS_THEN_CURVING_RIGHTWARDS)
(defchar "cudarrl" #\RIGHT-SIDE_ARC_CLOCKWISE_ARROW)
(defchar "larrpl" #\LEFT-SIDE_ARC_ANTICLOCKWISE_ARROW)
(defchar "curarrm" #\TOP_ARC_CLOCKWISE_ARROW_WITH_MINUS)
(defchar "cularrp" #\TOP_ARC_ANTICLOCKWISE_ARROW_WITH_PLUS)
(defchar "rarrpl" #\RIGHTWARDS_ARROW_WITH_PLUS_BELOW)
(defchar "harrcir" #\LEFT_RIGHT_ARROW_THROUGH_SMALL_CIRCLE)
(defchar "Uarrocir" #\UPWARDS_TWO-HEADED_ARROW_FROM_SMALL_CIRCLE)
(defchar "lurdshar" #\LEFT_BARB_UP_RIGHT_BARB_DOWN_HARPOON)
(defchar "ldrushar" #\LEFT_BARB_DOWN_RIGHT_BARB_UP_HARPOON)
(defchar "LeftRightVector" #\LEFT_BARB_UP_RIGHT_BARB_UP_HARPOON)
(defchar "RightUpDownVector" #\UP_BARB_RIGHT_DOWN_BARB_RIGHT_HARPOON)
(defchar "DownLeftRightVector" #\LEFT_BARB_DOWN_RIGHT_BARB_DOWN_HARPOON)
(defchar "LeftUpDownVector" #\UP_BARB_LEFT_DOWN_BARB_LEFT_HARPOON)
(defchar "LeftVectorBar" #\LEFTWARDS_HARPOON_WITH_BARB_UP_TO_BAR)
(defchar "RightVectorBar" #\RIGHTWARDS_HARPOON_WITH_BARB_UP_TO_BAR)
(defchar "RightUpVectorBar" #\UPWARDS_HARPOON_WITH_BARB_RIGHT_TO_BAR)
(defchar "RightDownVectorBar" #\DOWNWARDS_HARPOON_WITH_BARB_RIGHT_TO_BAR)
(defchar "DownLeftVectorBar" #\LEFTWARDS_HARPOON_WITH_BARB_DOWN_TO_BAR)
(defchar "DownRightVectorBar" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWN_TO_BAR)
(defchar "LeftUpVectorBar" #\UPWARDS_HARPOON_WITH_BARB_LEFT_TO_BAR)
(defchar "LeftDownVectorBar" #\DOWNWARDS_HARPOON_WITH_BARB_LEFT_TO_BAR)
(defchar "LeftTeeVector" #\LEFTWARDS_HARPOON_WITH_BARB_UP_FROM_BAR)
(defchar "RightTeeVector" #\RIGHTWARDS_HARPOON_WITH_BARB_UP_FROM_BAR)
(defchar "RightUpTeeVector" #\UPWARDS_HARPOON_WITH_BARB_RIGHT_FROM_BAR)
(defchar "RightDownTeeVector" #\DOWNWARDS_HARPOON_WITH_BARB_RIGHT_FROM_BAR)
(defchar "DownLeftTeeVector" #\LEFTWARDS_HARPOON_WITH_BARB_DOWN_FROM_BAR)
(defchar "DownRightTeeVector" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWN_FROM_BAR)
(defchar "LeftUpTeeVector" #\UPWARDS_HARPOON_WITH_BARB_LEFT_FROM_BAR)
(defchar "LeftDownTeeVector" #\DOWNWARDS_HARPOON_WITH_BARB_LEFT_FROM_BAR)
(defchar "lHar" #\LEFTWARDS_HARPOON_WITH_BARB_UP_ABOVE_LEFTWARDS_HARPOON_WITH_BARB_DOWN)
(defchar "uHar" #\UPWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_UPWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "rHar" #\RIGHTWARDS_HARPOON_WITH_BARB_UP_ABOVE_RIGHTWARDS_HARPOON_WITH_BARB_DOWN)
(defchar "dHar" #\DOWNWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_DOWNWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "luruhar" #\LEFTWARDS_HARPOON_WITH_BARB_UP_ABOVE_RIGHTWARDS_HARPOON_WITH_BARB_UP)
(defchar "ldrdhar" #\LEFTWARDS_HARPOON_WITH_BARB_DOWN_ABOVE_RIGHTWARDS_HARPOON_WITH_BARB_DOWN)
(defchar "ruluhar" #\RIGHTWARDS_HARPOON_WITH_BARB_UP_ABOVE_LEFTWARDS_HARPOON_WITH_BARB_UP)
(defchar "rdldhar" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWN_ABOVE_LEFTWARDS_HARPOON_WITH_BARB_DOWN)
(defchar "lharul" #\LEFTWARDS_HARPOON_WITH_BARB_UP_ABOVE_LONG_DASH)
(defchar "llhard" #\LEFTWARDS_HARPOON_WITH_BARB_DOWN_BELOW_LONG_DASH)
(defchar "rharul" #\RIGHTWARDS_HARPOON_WITH_BARB_UP_ABOVE_LONG_DASH)
(defchar "lrhard" #\RIGHTWARDS_HARPOON_WITH_BARB_DOWN_BELOW_LONG_DASH)
(defchar "udhar" #\UPWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_DOWNWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "UpEquilibrium" #\UPWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_DOWNWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "duhar" #\DOWNWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_UPWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "ReverseUpEquilibrium" #\DOWNWARDS_HARPOON_WITH_BARB_LEFT_BESIDE_UPWARDS_HARPOON_WITH_BARB_RIGHT)
(defchar "RoundImplies" #\RIGHT_DOUBLE_ARROW_WITH_ROUNDED_HEAD)
(defchar "erarr" #\EQUALS_SIGN_ABOVE_RIGHTWARDS_ARROW)
(defchar "simrarr" #\TILDE_OPERATOR_ABOVE_RIGHTWARDS_ARROW)
(defchar "larrsim" #\LEFTWARDS_ARROW_ABOVE_TILDE_OPERATOR)
(defchar "rarrsim" #\RIGHTWARDS_ARROW_ABOVE_TILDE_OPERATOR)
(defchar "rarrap" #\RIGHTWARDS_ARROW_ABOVE_ALMOST_EQUAL_TO)
(defchar "ltlarr" #\LESS-THAN_ABOVE_LEFTWARDS_ARROW)
(defchar "gtrarr" #\GREATER-THAN_ABOVE_RIGHTWARDS_ARROW)
(defchar "subrarr" #\SUBSET_ABOVE_RIGHTWARDS_ARROW)
(defchar "suplarr" #\SUPERSET_ABOVE_LEFTWARDS_ARROW)
(defchar "lfisht" #\LEFT_FISH_TAIL)
(defchar "rfisht" #\RIGHT_FISH_TAIL)
(defchar "ufisht" #\UP_FISH_TAIL)
(defchar "dfisht" #\DOWN_FISH_TAIL)
(defchar "lopar" #\LEFT_WHITE_PARENTHESIS)
(defchar "ropar" #\RIGHT_WHITE_PARENTHESIS)
(defchar "lbrke" #\LEFT_SQUARE_BRACKET_WITH_UNDERBAR)
(defchar "rbrke" #\RIGHT_SQUARE_BRACKET_WITH_UNDERBAR)
(defchar "lbrkslu" #\LEFT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER)
(defchar "rbrksld" #\RIGHT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER)
(defchar "lbrksld" #\LEFT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER)
(defchar "rbrkslu" #\RIGHT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER)
(defchar "langd" #\LEFT_ANGLE_BRACKET_WITH_DOT)
(defchar "rangd" #\RIGHT_ANGLE_BRACKET_WITH_DOT)
(defchar "lparlt" #\LEFT_ARC_LESS-THAN_BRACKET)
(defchar "rpargt" #\RIGHT_ARC_GREATER-THAN_BRACKET)
(defchar "gtlPar" #\DOUBLE_LEFT_ARC_GREATER-THAN_BRACKET)
(defchar "ltrPar" #\DOUBLE_RIGHT_ARC_LESS-THAN_BRACKET)
(defchar "vzigzag" #\VERTICAL_ZIGZAG_LINE)
(defchar "vangrt" #\RIGHT_ANGLE_VARIANT_WITH_SQUARE)
(defchar "angrtvbd" #\MEASURED_RIGHT_ANGLE_WITH_DOT)
(defchar "ange" #\ANGLE_WITH_UNDERBAR)
(defchar "range" #\REVERSED_ANGLE_WITH_UNDERBAR)
(defchar "dwangle" #\OBLIQUE_ANGLE_OPENING_UP)
(defchar "uwangle" #\OBLIQUE_ANGLE_OPENING_DOWN)
(defchar "angmsdaa" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_UP_AND_RIGHT)
(defchar "angmsdab" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_UP_AND_LEFT)
(defchar "angmsdac" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_DOWN_AND_RIGHT)
(defchar "angmsdad" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_DOWN_AND_LEFT)
(defchar "angmsdae" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_RIGHT_AND_UP)
(defchar "angmsdaf" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_LEFT_AND_UP)
(defchar "angmsdag" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_RIGHT_AND_DOWN)
(defchar "angmsdah" #\MEASURED_ANGLE_WITH_OPEN_ARM_ENDING_IN_ARROW_POINTING_LEFT_AND_DOWN)
(defchar "bemptyv" #\REVERSED_EMPTY_SET)
(defchar "demptyv" #\EMPTY_SET_WITH_OVERBAR)
(defchar "cemptyv" #\EMPTY_SET_WITH_SMALL_CIRCLE_ABOVE)
(defchar "raemptyv" #\EMPTY_SET_WITH_RIGHT_ARROW_ABOVE)
(defchar "laemptyv" #\EMPTY_SET_WITH_LEFT_ARROW_ABOVE)
(defchar "ohbar" #\CIRCLE_WITH_HORIZONTAL_BAR)
(defchar "omid" #\CIRCLED_VERTICAL_BAR)
(defchar "opar" #\CIRCLED_PARALLEL)
(defchar "operp" #\CIRCLED_PERPENDICULAR)
(defchar "olcross" #\CIRCLE_WITH_SUPERIMPOSED_X)
(defchar "odsold" #\CIRCLED_ANTICLOCKWISE-ROTATED_DIVISION_SIGN)
(defchar "olcir" #\CIRCLED_WHITE_BULLET)
(defchar "ofcir" #\CIRCLED_BULLET)
(defchar "olt" #\CIRCLED_LESS-THAN)
(defchar "ogt" #\CIRCLED_GREATER-THAN)
(defchar "cirscir" #\CIRCLE_WITH_SMALL_CIRCLE_TO_THE_RIGHT)
(defchar "cirE" #\CIRCLE_WITH_TWO_HORIZONTAL_STROKES_TO_THE_RIGHT)
(defchar "solb" #\SQUARED_RISING_DIAGONAL_SLASH)
(defchar "bsolb" #\SQUARED_FALLING_DIAGONAL_SLASH)
(defchar "boxbox" #\TWO_JOINED_SQUARES)
(defchar "trisb" #\TRIANGLE_WITH_SERIFS_AT_BOTTOM)
(defchar "rtriltri" #\RIGHT_TRIANGLE_ABOVE_LEFT_TRIANGLE)
(defchar "LeftTriangleBar" #\LEFT_TRIANGLE_BESIDE_VERTICAL_BAR)
(defchar "RightTriangleBar" #\VERTICAL_BAR_BESIDE_RIGHT_TRIANGLE)
(defchar "race" #\LEFT_DOUBLE_WIGGLY_FENCE)
(defchar "iinfin" #\INCOMPLETE_INFINITY)
(defchar "infintie" #\TIE_OVER_INFINITY)
(defchar "nvinfin" #\INFINITY_NEGATED_WITH_VERTICAL_BAR)
(defchar "eparsl" #\EQUALS_SIGN_AND_SLANTED_PARALLEL)
(defchar "smeparsl" #\EQUALS_SIGN_AND_SLANTED_PARALLEL_WITH_TILDE_ABOVE)
(defchar "eqvparsl" #\IDENTICAL_TO_AND_SLANTED_PARALLEL)
(defchar "lozf" #\BLACK_LOZENGE)
(defchar "blacklozenge" #\BLACK_LOZENGE)
(defchar "RuleDelayed" #\RULE-DELAYED)
(defchar "dsol" #\SOLIDUS_WITH_OVERBAR)
(defchar "xodot" #\N-ARY_CIRCLED_DOT_OPERATOR)
(defchar "bigodot" #\N-ARY_CIRCLED_DOT_OPERATOR)
(defchar "xoplus" #\N-ARY_CIRCLED_PLUS_OPERATOR)
(defchar "bigoplus" #\N-ARY_CIRCLED_PLUS_OPERATOR)
(defchar "xotime" #\N-ARY_CIRCLED_TIMES_OPERATOR)
(defchar "bigotimes" #\N-ARY_CIRCLED_TIMES_OPERATOR)
(defchar "xuplus" #\N-ARY_UNION_OPERATOR_WITH_PLUS)
(defchar "biguplus" #\N-ARY_UNION_OPERATOR_WITH_PLUS)
(defchar "xsqcup" #\N-ARY_SQUARE_UNION_OPERATOR)
(defchar "bigsqcup" #\N-ARY_SQUARE_UNION_OPERATOR)
(defchar "qint" #\QUADRUPLE_INTEGRAL_OPERATOR)
(defchar "iiiint" #\QUADRUPLE_INTEGRAL_OPERATOR)
(defchar "fpartint" #\FINITE_PART_INTEGRAL)
(defchar "cirfnint" #\CIRCULATION_FUNCTION)
(defchar "awint" #\ANTICLOCKWISE_INTEGRATION)
(defchar "rppolint" #\LINE_INTEGRATION_WITH_RECTANGULAR_PATH_AROUND_POLE)
(defchar "scpolint" #\LINE_INTEGRATION_WITH_SEMICIRCULAR_PATH_AROUND_POLE)
(defchar "npolint" #\LINE_INTEGRATION_NOT_INCLUDING_THE_POLE)
(defchar "pointint" #\INTEGRAL_AROUND_A_POINT_OPERATOR)
(defchar "quatint" #\QUATERNION_INTEGRAL_OPERATOR)
(defchar "intlarhk" #\INTEGRAL_WITH_LEFTWARDS_ARROW_WITH_HOOK)
(defchar "pluscir" #\PLUS_SIGN_WITH_SMALL_CIRCLE_ABOVE)
(defchar "plusacir" #\PLUS_SIGN_WITH_CIRCUMFLEX_ACCENT_ABOVE)
(defchar "simplus" #\PLUS_SIGN_WITH_TILDE_ABOVE)
(defchar "plusdu" #\PLUS_SIGN_WITH_DOT_BELOW)
(defchar "plussim" #\PLUS_SIGN_WITH_TILDE_BELOW)
(defchar "plustwo" #\PLUS_SIGN_WITH_SUBSCRIPT_TWO)
(defchar "mcomma" #\MINUS_SIGN_WITH_COMMA_ABOVE)
(defchar "minusdu" #\MINUS_SIGN_WITH_DOT_BELOW)
(defchar "loplus" #\PLUS_SIGN_IN_LEFT_HALF_CIRCLE)
(defchar "roplus" #\PLUS_SIGN_IN_RIGHT_HALF_CIRCLE)
(defchar "Cross" #\VECTOR_OR_CROSS_PRODUCT)
(defchar "timesd" #\MULTIPLICATION_SIGN_WITH_DOT_ABOVE)
(defchar "timesbar" #\MULTIPLICATION_SIGN_WITH_UNDERBAR)
(defchar "smashp" #\SMASH_PRODUCT)
(defchar "lotimes" #\MULTIPLICATION_SIGN_IN_LEFT_HALF_CIRCLE)
(defchar "rotimes" #\MULTIPLICATION_SIGN_IN_RIGHT_HALF_CIRCLE)
(defchar "otimesas" #\CIRCLED_MULTIPLICATION_SIGN_WITH_CIRCUMFLEX_ACCENT)
(defchar "Otimes" #\MULTIPLICATION_SIGN_IN_DOUBLE_CIRCLE)
(defchar "odiv" #\CIRCLED_DIVISION_SIGN)
(defchar "triplus" #\PLUS_SIGN_IN_TRIANGLE)
(defchar "triminus" #\MINUS_SIGN_IN_TRIANGLE)
(defchar "tritime" #\MULTIPLICATION_SIGN_IN_TRIANGLE)
(defchar "iprod" #\INTERIOR_PRODUCT)
(defchar "intprod" #\INTERIOR_PRODUCT)
(defchar "amalg" #\AMALGAMATION_OR_COPRODUCT)
(defchar "capdot" #\INTERSECTION_WITH_DOT)
(defchar "ncup" #\UNION_WITH_OVERBAR)
(defchar "ncap" #\INTERSECTION_WITH_OVERBAR)
(defchar "capand" #\INTERSECTION_WITH_LOGICAL_AND)
(defchar "cupor" #\UNION_WITH_LOGICAL_OR)
(defchar "cupcap" #\UNION_ABOVE_INTERSECTION)
(defchar "capcup" #\INTERSECTION_ABOVE_UNION)
(defchar "cupbrcap" #\UNION_ABOVE_BAR_ABOVE_INTERSECTION)
(defchar "capbrcup" #\INTERSECTION_ABOVE_BAR_ABOVE_UNION)
(defchar "cupcup" #\UNION_BESIDE_AND_JOINED_WITH_UNION)
(defchar "capcap" #\INTERSECTION_BESIDE_AND_JOINED_WITH_INTERSECTION)
(defchar "ccups" #\CLOSED_UNION_WITH_SERIFS)
(defchar "ccaps" #\CLOSED_INTERSECTION_WITH_SERIFS)
(defchar "ccupssm" #\CLOSED_UNION_WITH_SERIFS_AND_SMASH_PRODUCT)
(defchar "And" #\DOUBLE_LOGICAL_AND)
(defchar "Or" #\DOUBLE_LOGICAL_OR)
(defchar "andand" #\TWO_INTERSECTING_LOGICAL_AND)
(defchar "oror" #\TWO_INTERSECTING_LOGICAL_OR)
(defchar "orslope" #\SLOPING_LARGE_OR)
(defchar "andslope" #\SLOPING_LARGE_AND)
(defchar "andv" #\LOGICAL_AND_WITH_MIDDLE_STEM)
(defchar "orv" #\LOGICAL_OR_WITH_MIDDLE_STEM)
(defchar "andd" #\LOGICAL_AND_WITH_HORIZONTAL_DASH)
(defchar "ord" #\LOGICAL_OR_WITH_HORIZONTAL_DASH)
(defchar "wedbar" #\LOGICAL_AND_WITH_UNDERBAR)
(defchar "sdote" #\EQUALS_SIGN_WITH_DOT_BELOW)
(defchar "simdot" #\TILDE_OPERATOR_WITH_DOT_ABOVE)
(defchar "congdot" #\CONGRUENT_WITH_DOT_ABOVE)
(defchar "easter" #\EQUALS_WITH_ASTERISK)
(defchar "apacir" #\ALMOST_EQUAL_TO_WITH_CIRCUMFLEX_ACCENT)
(defchar "apE" #\APPROXIMATELY_EQUAL_OR_EQUAL_TO)
(defchar "eplus" #\EQUALS_SIGN_ABOVE_PLUS_SIGN)
(defchar "pluse" #\PLUS_SIGN_ABOVE_EQUALS_SIGN)
(defchar "Esim" #\EQUALS_SIGN_ABOVE_TILDE_OPERATOR)
(defchar "Colone" #\DOUBLE_COLON_EQUAL)
(defchar "Equal" #\TWO_CONSECUTIVE_EQUALS_SIGNS)
(defchar "eDDot" #\EQUALS_SIGN_WITH_TWO_DOTS_ABOVE_AND_TWO_DOTS_BELOW)
(defchar "ddotseq" #\EQUALS_SIGN_WITH_TWO_DOTS_ABOVE_AND_TWO_DOTS_BELOW)
(defchar "equivDD" #\EQUIVALENT_WITH_FOUR_DOTS_ABOVE)
(defchar "ltcir" #\LESS-THAN_WITH_CIRCLE_INSIDE)
(defchar "gtcir" #\GREATER-THAN_WITH_CIRCLE_INSIDE)
(defchar "ltquest" #\LESS-THAN_WITH_QUESTION_MARK_ABOVE)
(defchar "gtquest" #\GREATER-THAN_WITH_QUESTION_MARK_ABOVE)
(defchar "les" #\LESS-THAN_OR_SLANTED_EQUAL_TO)
(defchar "LessSlantEqual" #\LESS-THAN_OR_SLANTED_EQUAL_TO)
(defchar "leqslant" #\LESS-THAN_OR_SLANTED_EQUAL_TO)
(defchar "ges" #\GREATER-THAN_OR_SLANTED_EQUAL_TO)
(defchar "GreaterSlantEqual" #\GREATER-THAN_OR_SLANTED_EQUAL_TO)
(defchar "geqslant" #\GREATER-THAN_OR_SLANTED_EQUAL_TO)
(defchar "lesdot" #\LESS-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE)
(defchar "gesdot" #\GREATER-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE)
(defchar "lesdoto" #\LESS-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE)
(defchar "gesdoto" #\GREATER-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE)
(defchar "lesdotor" #\LESS-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_RIGHT)
(defchar "gesdotol" #\GREATER-THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_LEFT)
(defchar "lap" #\LESS-THAN_OR_APPROXIMATE)
(defchar "lessapprox" #\LESS-THAN_OR_APPROXIMATE)
(defchar "gap" #\GREATER-THAN_OR_APPROXIMATE)
(defchar "gtrapprox" #\GREATER-THAN_OR_APPROXIMATE)
(defchar "lne" #\LESS-THAN_AND_SINGLE-LINE_NOT_EQUAL_TO)
(defchar "lneq" #\LESS-THAN_AND_SINGLE-LINE_NOT_EQUAL_TO)
(defchar "gne" #\GREATER-THAN_AND_SINGLE-LINE_NOT_EQUAL_TO)
(defchar "gneq" #\GREATER-THAN_AND_SINGLE-LINE_NOT_EQUAL_TO)
(defchar "lnap" #\LESS-THAN_AND_NOT_APPROXIMATE)
(defchar "lnapprox" #\LESS-THAN_AND_NOT_APPROXIMATE)
(defchar "gnap" #\GREATER-THAN_AND_NOT_APPROXIMATE)
(defchar "gnapprox" #\GREATER-THAN_AND_NOT_APPROXIMATE)
(defchar "lEg" #\LESS-THAN_ABOVE_DOUBLE-LINE_EQUAL_ABOVE_GREATER-THAN)
(defchar "lesseqqgtr" #\LESS-THAN_ABOVE_DOUBLE-LINE_EQUAL_ABOVE_GREATER-THAN)
(defchar "gEl" #\GREATER-THAN_ABOVE_DOUBLE-LINE_EQUAL_ABOVE_LESS-THAN)
(defchar "gtreqqless" #\GREATER-THAN_ABOVE_DOUBLE-LINE_EQUAL_ABOVE_LESS-THAN)
(defchar "lsime" #\LESS-THAN_ABOVE_SIMILAR_OR_EQUAL)
(defchar "gsime" #\GREATER-THAN_ABOVE_SIMILAR_OR_EQUAL)
(defchar "lsimg" #\LESS-THAN_ABOVE_SIMILAR_ABOVE_GREATER-THAN)
(defchar "gsiml" #\GREATER-THAN_ABOVE_SIMILAR_ABOVE_LESS-THAN)
(defchar "lgE" #\LESS-THAN_ABOVE_GREATER-THAN_ABOVE_DOUBLE-LINE_EQUAL)
(defchar "glE" #\GREATER-THAN_ABOVE_LESS-THAN_ABOVE_DOUBLE-LINE_EQUAL)
(defchar "lesges" #\LESS-THAN_ABOVE_SLANTED_EQUAL_ABOVE_GREATER-THAN_ABOVE_SLANTED_EQUAL)
(defchar "gesles" #\GREATER-THAN_ABOVE_SLANTED_EQUAL_ABOVE_LESS-THAN_ABOVE_SLANTED_EQUAL)
(defchar "els" #\SLANTED_EQUAL_TO_OR_LESS-THAN)
(defchar "eqslantless" #\SLANTED_EQUAL_TO_OR_LESS-THAN)
(defchar "egs" #\SLANTED_EQUAL_TO_OR_GREATER-THAN)
(defchar "eqslantgtr" #\SLANTED_EQUAL_TO_OR_GREATER-THAN)
(defchar "elsdot" #\SLANTED_EQUAL_TO_OR_LESS-THAN_WITH_DOT_INSIDE)
(defchar "egsdot" #\SLANTED_EQUAL_TO_OR_GREATER-THAN_WITH_DOT_INSIDE)
(defchar "el" #\DOUBLE-LINE_EQUAL_TO_OR_LESS-THAN)
(defchar "eg" #\DOUBLE-LINE_EQUAL_TO_OR_GREATER-THAN)
(defchar "siml" #\SIMILAR_OR_LESS-THAN)
(defchar "simg" #\SIMILAR_OR_GREATER-THAN)
(defchar "simlE" #\SIMILAR_ABOVE_LESS-THAN_ABOVE_EQUALS_SIGN)
(defchar "simgE" #\SIMILAR_ABOVE_GREATER-THAN_ABOVE_EQUALS_SIGN)
(defchar "LessLess" #\DOUBLE_NESTED_LESS-THAN)
(defchar "GreaterGreater" #\DOUBLE_NESTED_GREATER-THAN)
(defchar "glj" #\GREATER-THAN_OVERLAPPING_LESS-THAN)
(defchar "gla" #\GREATER-THAN_BESIDE_LESS-THAN)
(defchar "ltcc" #\LESS-THAN_CLOSED_BY_CURVE)
(defchar "gtcc" #\GREATER-THAN_CLOSED_BY_CURVE)
(defchar "lescc" #\LESS-THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL)
(defchar "gescc" #\GREATER-THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL)
(defchar "smt" #\SMALLER_THAN)
(defchar "lat" #\LARGER_THAN)
(defchar "smte" #\SMALLER_THAN_OR_EQUAL_TO)
(defchar "late" #\LARGER_THAN_OR_EQUAL_TO)
(defchar "bumpE" #\EQUALS_SIGN_WITH_BUMPY_ABOVE)
(defchar "pre" #\PRECEDES_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "preceq" #\PRECEDES_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "PrecedesEqual" #\PRECEDES_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "sce" #\SUCCEEDS_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "succeq" #\SUCCEEDS_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "SucceedsEqual" #\SUCCEEDS_ABOVE_SINGLE-LINE_EQUALS_SIGN)
(defchar "prE" #\PRECEDES_ABOVE_EQUALS_SIGN)
(defchar "scE" #\SUCCEEDS_ABOVE_EQUALS_SIGN)
(defchar "prnE" #\PRECEDES_ABOVE_NOT_EQUAL_TO)
(defchar "precneqq" #\PRECEDES_ABOVE_NOT_EQUAL_TO)
(defchar "scnE" #\SUCCEEDS_ABOVE_NOT_EQUAL_TO)
(defchar "succneqq" #\SUCCEEDS_ABOVE_NOT_EQUAL_TO)
(defchar "prap" #\PRECEDES_ABOVE_ALMOST_EQUAL_TO)
(defchar "precapprox" #\PRECEDES_ABOVE_ALMOST_EQUAL_TO)
(defchar "scap" #\SUCCEEDS_ABOVE_ALMOST_EQUAL_TO)
(defchar "succapprox" #\SUCCEEDS_ABOVE_ALMOST_EQUAL_TO)
(defchar "prnap" #\PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO)
(defchar "precnapprox" #\PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO)
(defchar "scnap" #\SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO)
(defchar "succnapprox" #\SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO)
(defchar "Pr" #\DOUBLE_PRECEDES)
(defchar "Sc" #\DOUBLE_SUCCEEDS)
(defchar "subdot" #\SUBSET_WITH_DOT)
(defchar "supdot" #\SUPERSET_WITH_DOT)
(defchar "subplus" #\SUBSET_WITH_PLUS_SIGN_BELOW)
(defchar "supplus" #\SUPERSET_WITH_PLUS_SIGN_BELOW)
(defchar "submult" #\SUBSET_WITH_MULTIPLICATION_SIGN_BELOW)
(defchar "supmult" #\SUPERSET_WITH_MULTIPLICATION_SIGN_BELOW)
(defchar "subedot" #\SUBSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE)
(defchar "supedot" #\SUPERSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE)
(defchar "subE" #\SUBSET_OF_ABOVE_EQUALS_SIGN)
(defchar "subseteqq" #\SUBSET_OF_ABOVE_EQUALS_SIGN)
(defchar "supE" #\SUPERSET_OF_ABOVE_EQUALS_SIGN)
(defchar "supseteqq" #\SUPERSET_OF_ABOVE_EQUALS_SIGN)
(defchar "subsim" #\SUBSET_OF_ABOVE_TILDE_OPERATOR)
(defchar "supsim" #\SUPERSET_OF_ABOVE_TILDE_OPERATOR)
(defchar "subnE" #\SUBSET_OF_ABOVE_NOT_EQUAL_TO)
(defchar "subsetneqq" #\SUBSET_OF_ABOVE_NOT_EQUAL_TO)
(defchar "supnE" #\SUPERSET_OF_ABOVE_NOT_EQUAL_TO)
(defchar "supsetneqq" #\SUPERSET_OF_ABOVE_NOT_EQUAL_TO)
(defchar "csub" #\CLOSED_SUBSET)
(defchar "csup" #\CLOSED_SUPERSET)
(defchar "csube" #\CLOSED_SUBSET_OR_EQUAL_TO)
(defchar "csupe" #\CLOSED_SUPERSET_OR_EQUAL_TO)
(defchar "subsup" #\SUBSET_ABOVE_SUPERSET)
(defchar "supsub" #\SUPERSET_ABOVE_SUBSET)
(defchar "subsub" #\SUBSET_ABOVE_SUBSET)
(defchar "supsup" #\SUPERSET_ABOVE_SUPERSET)
(defchar "suphsub" #\SUPERSET_BESIDE_SUBSET)
(defchar "supdsub" #\SUPERSET_BESIDE_AND_JOINED_BY_DASH_WITH_SUBSET)
(defchar "forkv" #\ELEMENT_OF_OPENING_DOWNWARDS)
(defchar "topfork" #\PITCHFORK_WITH_TEE_TOP)
(defchar "mlcp" #\TRANSVERSAL_INTERSECTION)
(defchar "Dashv" #\VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE)
(defchar "DoubleLeftTee" #\VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE)
(defchar "Vdashl" #\LONG_DASH_FROM_LEFT_MEMBER_OF_DOUBLE_VERTICAL)
(defchar "Barv" #\SHORT_DOWN_TACK_WITH_OVERBAR)
(defchar "vBar" #\SHORT_UP_TACK_WITH_UNDERBAR)
(defchar "vBarv" #\SHORT_UP_TACK_ABOVE_SHORT_DOWN_TACK)
(defchar "Vbar" #\DOUBLE_UP_TACK)
(defchar "Not" #\DOUBLE_STROKE_NOT_SIGN)
(defchar "bNot" #\REVERSED_DOUBLE_STROKE_NOT_SIGN)
(defchar "rnmid" #\DOES_NOT_DIVIDE_WITH_REVERSED_NEGATION_SLASH)
(defchar "cirmid" #\VERTICAL_LINE_WITH_CIRCLE_ABOVE)
(defchar "midcir" #\VERTICAL_LINE_WITH_CIRCLE_BELOW)
(defchar "topcir" #\DOWN_TACK_WITH_CIRCLE_BELOW)
(defchar "nhpar" #\PARALLEL_WITH_HORIZONTAL_STROKE)
(defchar "parsim" #\PARALLEL_WITH_TILDE_OPERATOR)
(defchar "parsl" #\DOUBLE_SOLIDUS_OPERATOR)
(defchar "fflig" #\LATIN_SMALL_LIGATURE_FF)
(defchar "filig" #\LATIN_SMALL_LIGATURE_FI)
(defchar "fllig" #\LATIN_SMALL_LIGATURE_FL)
(defchar "ffilig" #\LATIN_SMALL_LIGATURE_FFI)
(defchar "ffllig" #\LATIN_SMALL_LIGATURE_FFL)
(defchar "Ascr" #\MATHEMATICAL_SCRIPT_CAPITAL_A)
(defchar "Cscr" #\MATHEMATICAL_SCRIPT_CAPITAL_C)
(defchar "Dscr" #\MATHEMATICAL_SCRIPT_CAPITAL_D)
(defchar "Gscr" #\MATHEMATICAL_SCRIPT_CAPITAL_G)
(defchar "Jscr" #\MATHEMATICAL_SCRIPT_CAPITAL_J)
(defchar "Kscr" #\MATHEMATICAL_SCRIPT_CAPITAL_K)
(defchar "Nscr" #\MATHEMATICAL_SCRIPT_CAPITAL_N)
(defchar "Oscr" #\MATHEMATICAL_SCRIPT_CAPITAL_O)
(defchar "Pscr" #\MATHEMATICAL_SCRIPT_CAPITAL_P)
(defchar "Qscr" #\MATHEMATICAL_SCRIPT_CAPITAL_Q)
(defchar "Sscr" #\MATHEMATICAL_SCRIPT_CAPITAL_S)
(defchar "Tscr" #\MATHEMATICAL_SCRIPT_CAPITAL_T)
(defchar "Uscr" #\MATHEMATICAL_SCRIPT_CAPITAL_U)
(defchar "Vscr" #\MATHEMATICAL_SCRIPT_CAPITAL_V)
(defchar "Wscr" #\MATHEMATICAL_SCRIPT_CAPITAL_W)
(defchar "Xscr" #\MATHEMATICAL_SCRIPT_CAPITAL_X)
(defchar "Yscr" #\MATHEMATICAL_SCRIPT_CAPITAL_Y)
(defchar "Zscr" #\MATHEMATICAL_SCRIPT_CAPITAL_Z)
(defchar "ascr" #\MATHEMATICAL_SCRIPT_SMALL_A)
(defchar "bscr" #\MATHEMATICAL_SCRIPT_SMALL_B)
(defchar "cscr" #\MATHEMATICAL_SCRIPT_SMALL_C)
(defchar "dscr" #\MATHEMATICAL_SCRIPT_SMALL_D)
(defchar "fscr" #\MATHEMATICAL_SCRIPT_SMALL_F)
(defchar "hscr" #\MATHEMATICAL_SCRIPT_SMALL_H)
(defchar "iscr" #\MATHEMATICAL_SCRIPT_SMALL_I)
(defchar "jscr" #\MATHEMATICAL_SCRIPT_SMALL_J)
(defchar "kscr" #\MATHEMATICAL_SCRIPT_SMALL_K)
(defchar "lscr" #\MATHEMATICAL_SCRIPT_SMALL_L)
(defchar "mscr" #\MATHEMATICAL_SCRIPT_SMALL_M)
(defchar "nscr" #\MATHEMATICAL_SCRIPT_SMALL_N)
(defchar "pscr" #\MATHEMATICAL_SCRIPT_SMALL_P)
(defchar "qscr" #\MATHEMATICAL_SCRIPT_SMALL_Q)
(defchar "rscr" #\MATHEMATICAL_SCRIPT_SMALL_R)
(defchar "sscr" #\MATHEMATICAL_SCRIPT_SMALL_S)
(defchar "tscr" #\MATHEMATICAL_SCRIPT_SMALL_T)
(defchar "uscr" #\MATHEMATICAL_SCRIPT_SMALL_U)
(defchar "vscr" #\MATHEMATICAL_SCRIPT_SMALL_V)
(defchar "wscr" #\MATHEMATICAL_SCRIPT_SMALL_W)
(defchar "xscr" #\MATHEMATICAL_SCRIPT_SMALL_X)
(defchar "yscr" #\MATHEMATICAL_SCRIPT_SMALL_Y)
(defchar "zscr" #\MATHEMATICAL_SCRIPT_SMALL_Z)
(defchar "Afr" #\MATHEMATICAL_FRAKTUR_CAPITAL_A)
(defchar "Bfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_B)
(defchar "Dfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_D)
(defchar "Efr" #\MATHEMATICAL_FRAKTUR_CAPITAL_E)
(defchar "Ffr" #\MATHEMATICAL_FRAKTUR_CAPITAL_F)
(defchar "Gfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_G)
(defchar "Jfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_J)
(defchar "Kfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_K)
(defchar "Lfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_L)
(defchar "Mfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_M)
(defchar "Nfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_N)
(defchar "Ofr" #\MATHEMATICAL_FRAKTUR_CAPITAL_O)
(defchar "Pfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_P)
(defchar "Qfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_Q)
(defchar "Sfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_S)
(defchar "Tfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_T)
(defchar "Ufr" #\MATHEMATICAL_FRAKTUR_CAPITAL_U)
(defchar "Vfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_V)
(defchar "Wfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_W)
(defchar "Xfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_X)
(defchar "Yfr" #\MATHEMATICAL_FRAKTUR_CAPITAL_Y)
(defchar "afr" #\MATHEMATICAL_FRAKTUR_SMALL_A)
(defchar "bfr" #\MATHEMATICAL_FRAKTUR_SMALL_B)
(defchar "cfr" #\MATHEMATICAL_FRAKTUR_SMALL_C)
(defchar "dfr" #\MATHEMATICAL_FRAKTUR_SMALL_D)
(defchar "efr" #\MATHEMATICAL_FRAKTUR_SMALL_E)
(defchar "ffr" #\MATHEMATICAL_FRAKTUR_SMALL_F)
(defchar "gfr" #\MATHEMATICAL_FRAKTUR_SMALL_G)
(defchar "hfr" #\MATHEMATICAL_FRAKTUR_SMALL_H)
(defchar "ifr" #\MATHEMATICAL_FRAKTUR_SMALL_I)
(defchar "jfr" #\MATHEMATICAL_FRAKTUR_SMALL_J)
(defchar "kfr" #\MATHEMATICAL_FRAKTUR_SMALL_K)
(defchar "lfr" #\MATHEMATICAL_FRAKTUR_SMALL_L)
(defchar "mfr" #\MATHEMATICAL_FRAKTUR_SMALL_M)
(defchar "nfr" #\MATHEMATICAL_FRAKTUR_SMALL_N)
(defchar "ofr" #\MATHEMATICAL_FRAKTUR_SMALL_O)
(defchar "pfr" #\MATHEMATICAL_FRAKTUR_SMALL_P)
(defchar "qfr" #\MATHEMATICAL_FRAKTUR_SMALL_Q)
(defchar "rfr" #\MATHEMATICAL_FRAKTUR_SMALL_R)
(defchar "sfr" #\MATHEMATICAL_FRAKTUR_SMALL_S)
(defchar "tfr" #\MATHEMATICAL_FRAKTUR_SMALL_T)
(defchar "ufr" #\MATHEMATICAL_FRAKTUR_SMALL_U)
(defchar "vfr" #\MATHEMATICAL_FRAKTUR_SMALL_V)
(defchar "wfr" #\MATHEMATICAL_FRAKTUR_SMALL_W)
(defchar "xfr" #\MATHEMATICAL_FRAKTUR_SMALL_X)
(defchar "yfr" #\MATHEMATICAL_FRAKTUR_SMALL_Y)
(defchar "zfr" #\MATHEMATICAL_FRAKTUR_SMALL_Z)
(defchar "Aopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_A)
(defchar "Bopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_B)
(defchar "Dopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_D)
(defchar "Eopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_E)
(defchar "Fopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_F)
(defchar "Gopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_G)
(defchar "Iopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_I)
(defchar "Jopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_J)
(defchar "Kopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_K)
(defchar "Lopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_L)
(defchar "Mopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_M)
(defchar "Oopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_O)
(defchar "Sopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_S)
(defchar "Topf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_T)
(defchar "Uopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_U)
(defchar "Vopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_V)
(defchar "Wopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_W)
(defchar "Xopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_X)
(defchar "Yopf" #\MATHEMATICAL_DOUBLE-STRUCK_CAPITAL_Y)
(defchar "aopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_A)
(defchar "bopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_B)
(defchar "copf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_C)
(defchar "dopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_D)
(defchar "eopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_E)
(defchar "fopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_F)
(defchar "gopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_G)
(defchar "hopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_H)
(defchar "iopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_I)
(defchar "jopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_J)
(defchar "kopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_K)
(defchar "lopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_L)
(defchar "mopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_M)
(defchar "nopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_N)
(defchar "oopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_O)
(defchar "popf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_P)
(defchar "qopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_Q)
(defchar "ropf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_R)
(defchar "sopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_S)
(defchar "topf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_T)
(defchar "uopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_U)
(defchar "vopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_V)
(defchar "wopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_W)
(defchar "xopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_X)
(defchar "yopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_Y)
(defchar "zopf" #\MATHEMATICAL_DOUBLE-STRUCK_SMALL_Z)

(defun unescape-symbol (str)
  "Take as argument a string like &amp; and return a char like #\&"
  (let* ((code-p (char= (elt str 1) #\#))
         (hexa-p (and code-p (char= (elt str 2) #\x)))
         (symbol (subseq str (cond (hexa-p 3)
                                   (code-p 2)
                                   (t 1))
                         (1- (length str)))))
    (if (or hexa-p code-p)
        (handler-case
          (code-char
            (parse-integer symbol
                           :radix (if hexa-p 16 10)))
          (error () nil))
        (gethash symbol *escape-table*))))

(defun unescape-html (str)
  (re:regex-replace-all *escaped-scanner* str
                 (lambda (match start end from to v1 v2)
                   (declare (ignore start end v1 v2))
                   (let* ((initial (subseq match from to))
                          (res (unescape-symbol initial)))
                     (if res
                         (string res)
                         initial)))))
